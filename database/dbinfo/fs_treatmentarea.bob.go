// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var FSTreatmentareas = Table[
	fsTreatmentareaColumns,
	fsTreatmentareaIndexes,
	fsTreatmentareaForeignKeys,
	fsTreatmentareaUniques,
	fsTreatmentareaChecks,
]{
	Schema: "",
	Name:   "fs_treatmentarea",
	Columns: fsTreatmentareaColumns{
		Comments: column{
			Name:      "comments",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creationdate: column{
			Name:      "creationdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creator: column{
			Name:      "creator",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editdate: column{
			Name:      "editdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editor: column{
			Name:      "editor",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Globalid: column{
			Name:      "globalid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Notified: column{
			Name:      "notified",
			DBType:    "smallint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Objectid: column{
			Name:      "objectid",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		SessionID: column{
			Name:      "session_id",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		ShapeArea: column{
			Name:      "shape__area",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		ShapeLength: column{
			Name:      "shape__length",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Treatdate: column{
			Name:      "treatdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		TreatID: column{
			Name:      "treat_id",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Type: column{
			Name:      "type",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedDate: column{
			Name:      "created_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedUser: column{
			Name:      "created_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryX: column{
			Name:      "geometry_x",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryY: column{
			Name:      "geometry_y",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedDate: column{
			Name:      "last_edited_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedUser: column{
			Name:      "last_edited_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Updated: column{
			Name:      "updated",
			DBType:    "timestamp without time zone",
			Default:   "CURRENT_TIMESTAMP",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: fsTreatmentareaIndexes{
		FSTreatmentareaPkey: index{
			Type: "btree",
			Name: "fs_treatmentarea_pkey",
			Columns: []indexColumn{
				{
					Name:         "objectid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "fs_treatmentarea_pkey",
		Columns: []string{"objectid"},
		Comment: "",
	},

	Comment: "",
}

type fsTreatmentareaColumns struct {
	Comments       column
	Creationdate   column
	Creator        column
	Editdate       column
	Editor         column
	Globalid       column
	Notified       column
	Objectid       column
	SessionID      column
	ShapeArea      column
	ShapeLength    column
	Treatdate      column
	TreatID        column
	Type           column
	CreatedDate    column
	CreatedUser    column
	GeometryX      column
	GeometryY      column
	LastEditedDate column
	LastEditedUser column
	Updated        column
}

func (c fsTreatmentareaColumns) AsSlice() []column {
	return []column{
		c.Comments, c.Creationdate, c.Creator, c.Editdate, c.Editor, c.Globalid, c.Notified, c.Objectid, c.SessionID, c.ShapeArea, c.ShapeLength, c.Treatdate, c.TreatID, c.Type, c.CreatedDate, c.CreatedUser, c.GeometryX, c.GeometryY, c.LastEditedDate, c.LastEditedUser, c.Updated,
	}
}

type fsTreatmentareaIndexes struct {
	FSTreatmentareaPkey index
}

func (i fsTreatmentareaIndexes) AsSlice() []index {
	return []index{
		i.FSTreatmentareaPkey,
	}
}

type fsTreatmentareaForeignKeys struct{}

func (f fsTreatmentareaForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type fsTreatmentareaUniques struct{}

func (u fsTreatmentareaUniques) AsSlice() []constraint {
	return []constraint{}
}

type fsTreatmentareaChecks struct{}

func (c fsTreatmentareaChecks) AsSlice() []check {
	return []check{}
}

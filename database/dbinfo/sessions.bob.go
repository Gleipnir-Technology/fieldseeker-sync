// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var Sessions = Table[
	sessionColumns,
	sessionIndexes,
	sessionForeignKeys,
	sessionUniques,
	sessionChecks,
]{
	Schema: "",
	Name:   "sessions",
	Columns: sessionColumns{
		Token: column{
			Name:      "token",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Data: column{
			Name:      "data",
			DBType:    "bytea",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Expiry: column{
			Name:      "expiry",
			DBType:    "timestamp with time zone",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: sessionIndexes{
		SessionsPkey: index{
			Type: "btree",
			Name: "sessions_pkey",
			Columns: []indexColumn{
				{
					Name:         "token",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
		SessionsExpiryIdx: index{
			Type: "btree",
			Name: "sessions_expiry_idx",
			Columns: []indexColumn{
				{
					Name:         "expiry",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        false,
			Comment:       "",
			NullsFirst:    []bool{false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "sessions_pkey",
		Columns: []string{"token"},
		Comment: "",
	},

	Comment: "",
}

type sessionColumns struct {
	Token  column
	Data   column
	Expiry column
}

func (c sessionColumns) AsSlice() []column {
	return []column{
		c.Token, c.Data, c.Expiry,
	}
}

type sessionIndexes struct {
	SessionsPkey      index
	SessionsExpiryIdx index
}

func (i sessionIndexes) AsSlice() []index {
	return []index{
		i.SessionsPkey, i.SessionsExpiryIdx,
	}
}

type sessionForeignKeys struct{}

func (f sessionForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type sessionUniques struct{}

func (u sessionUniques) AsSlice() []constraint {
	return []constraint{}
}

type sessionChecks struct{}

func (c sessionChecks) AsSlice() []check {
	return []check{}
}

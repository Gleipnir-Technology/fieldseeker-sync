// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var HistoryContainerrelates = Table[
	historyContainerrelateColumns,
	historyContainerrelateIndexes,
	historyContainerrelateForeignKeys,
	historyContainerrelateUniques,
	historyContainerrelateChecks,
]{
	Schema: "",
	Name:   "history_containerrelate",
	Columns: historyContainerrelateColumns{
		Containertype: column{
			Name:      "containertype",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creationdate: column{
			Name:      "creationdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creator: column{
			Name:      "creator",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editdate: column{
			Name:      "editdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editor: column{
			Name:      "editor",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Globalid: column{
			Name:      "globalid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Inspsampleid: column{
			Name:      "inspsampleid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Mosquitoinspid: column{
			Name:      "mosquitoinspid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Objectid: column{
			Name:      "objectid",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Treatmentid: column{
			Name:      "treatmentid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Created: column{
			Name:      "created",
			DBType:    "timestamp without time zone",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedDate: column{
			Name:      "created_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedUser: column{
			Name:      "created_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryX: column{
			Name:      "geometry_x",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryY: column{
			Name:      "geometry_y",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedDate: column{
			Name:      "last_edited_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedUser: column{
			Name:      "last_edited_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Version: column{
			Name:      "version",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: historyContainerrelateIndexes{
		HistoryContainerrelatePkey: index{
			Type: "btree",
			Name: "history_containerrelate_pkey",
			Columns: []indexColumn{
				{
					Name:         "objectid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
				{
					Name:         "version",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false, false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "history_containerrelate_pkey",
		Columns: []string{"objectid", "version"},
		Comment: "",
	},

	Comment: "",
}

type historyContainerrelateColumns struct {
	Containertype  column
	Creationdate   column
	Creator        column
	Editdate       column
	Editor         column
	Globalid       column
	Inspsampleid   column
	Mosquitoinspid column
	Objectid       column
	Treatmentid    column
	Created        column
	CreatedDate    column
	CreatedUser    column
	GeometryX      column
	GeometryY      column
	LastEditedDate column
	LastEditedUser column
	Version        column
}

func (c historyContainerrelateColumns) AsSlice() []column {
	return []column{
		c.Containertype, c.Creationdate, c.Creator, c.Editdate, c.Editor, c.Globalid, c.Inspsampleid, c.Mosquitoinspid, c.Objectid, c.Treatmentid, c.Created, c.CreatedDate, c.CreatedUser, c.GeometryX, c.GeometryY, c.LastEditedDate, c.LastEditedUser, c.Version,
	}
}

type historyContainerrelateIndexes struct {
	HistoryContainerrelatePkey index
}

func (i historyContainerrelateIndexes) AsSlice() []index {
	return []index{
		i.HistoryContainerrelatePkey,
	}
}

type historyContainerrelateForeignKeys struct{}

func (f historyContainerrelateForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type historyContainerrelateUniques struct{}

func (u historyContainerrelateUniques) AsSlice() []constraint {
	return []constraint{}
}

type historyContainerrelateChecks struct{}

func (c historyContainerrelateChecks) AsSlice() []check {
	return []check{}
}

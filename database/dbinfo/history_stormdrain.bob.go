// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var HistoryStormdrains = Table[
	historyStormdrainColumns,
	historyStormdrainIndexes,
	historyStormdrainForeignKeys,
	historyStormdrainUniques,
	historyStormdrainChecks,
]{
	Schema: "",
	Name:   "history_stormdrain",
	Columns: historyStormdrainColumns{
		Creationdate: column{
			Name:      "creationdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creator: column{
			Name:      "creator",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editdate: column{
			Name:      "editdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editor: column{
			Name:      "editor",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Globalid: column{
			Name:      "globalid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Jurisdiction: column{
			Name:      "jurisdiction",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Lastaction: column{
			Name:      "lastaction",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Laststatus: column{
			Name:      "laststatus",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Lasttreatdate: column{
			Name:      "lasttreatdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Nexttreatmentdate: column{
			Name:      "nexttreatmentdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Objectid: column{
			Name:      "objectid",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Symbology: column{
			Name:      "symbology",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Type: column{
			Name:      "type",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Zone: column{
			Name:      "zone",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Zone2: column{
			Name:      "zone2",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Created: column{
			Name:      "created",
			DBType:    "timestamp without time zone",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedDate: column{
			Name:      "created_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedUser: column{
			Name:      "created_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryX: column{
			Name:      "geometry_x",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryY: column{
			Name:      "geometry_y",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedDate: column{
			Name:      "last_edited_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedUser: column{
			Name:      "last_edited_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Version: column{
			Name:      "version",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: historyStormdrainIndexes{
		HistoryStormdrainPkey: index{
			Type: "btree",
			Name: "history_stormdrain_pkey",
			Columns: []indexColumn{
				{
					Name:         "objectid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
				{
					Name:         "version",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false, false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "history_stormdrain_pkey",
		Columns: []string{"objectid", "version"},
		Comment: "",
	},

	Comment: "",
}

type historyStormdrainColumns struct {
	Creationdate      column
	Creator           column
	Editdate          column
	Editor            column
	Globalid          column
	Jurisdiction      column
	Lastaction        column
	Laststatus        column
	Lasttreatdate     column
	Nexttreatmentdate column
	Objectid          column
	Symbology         column
	Type              column
	Zone              column
	Zone2             column
	Created           column
	CreatedDate       column
	CreatedUser       column
	GeometryX         column
	GeometryY         column
	LastEditedDate    column
	LastEditedUser    column
	Version           column
}

func (c historyStormdrainColumns) AsSlice() []column {
	return []column{
		c.Creationdate, c.Creator, c.Editdate, c.Editor, c.Globalid, c.Jurisdiction, c.Lastaction, c.Laststatus, c.Lasttreatdate, c.Nexttreatmentdate, c.Objectid, c.Symbology, c.Type, c.Zone, c.Zone2, c.Created, c.CreatedDate, c.CreatedUser, c.GeometryX, c.GeometryY, c.LastEditedDate, c.LastEditedUser, c.Version,
	}
}

type historyStormdrainIndexes struct {
	HistoryStormdrainPkey index
}

func (i historyStormdrainIndexes) AsSlice() []index {
	return []index{
		i.HistoryStormdrainPkey,
	}
}

type historyStormdrainForeignKeys struct{}

func (f historyStormdrainForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type historyStormdrainUniques struct{}

func (u historyStormdrainUniques) AsSlice() []constraint {
	return []constraint{}
}

type historyStormdrainChecks struct{}

func (c historyStormdrainChecks) AsSlice() []check {
	return []check{}
}

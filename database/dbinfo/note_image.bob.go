// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var NoteImages = Table[
	noteImageColumns,
	noteImageIndexes,
	noteImageForeignKeys,
	noteImageUniques,
	noteImageChecks,
]{
	Schema: "",
	Name:   "note_image",
	Columns: noteImageColumns{
		Created: column{
			Name:      "created",
			DBType:    "timestamp without time zone",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Deleted: column{
			Name:      "deleted",
			DBType:    "timestamp without time zone",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Version: column{
			Name:      "version",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		UUID: column{
			Name:      "uuid",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Creator: column{
			Name:      "creator",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: noteImageIndexes{
		NoteImagePkey: index{
			Type: "btree",
			Name: "note_image_pkey",
			Columns: []indexColumn{
				{
					Name:         "version",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
				{
					Name:         "uuid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false, false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "note_image_pkey",
		Columns: []string{"version", "uuid"},
		Comment: "",
	},
	ForeignKeys: noteImageForeignKeys{
		NoteImageNoteImageCreatorFkey: foreignKey{
			constraint: constraint{
				Name:    "note_image.note_image_creator_fkey",
				Columns: []string{"creator"},
				Comment: "",
			},
			ForeignTable:   "user_",
			ForeignColumns: []string{"id"},
		},
	},

	Comment: "",
}

type noteImageColumns struct {
	Created column
	Deleted column
	Version column
	UUID    column
	Creator column
}

func (c noteImageColumns) AsSlice() []column {
	return []column{
		c.Created, c.Deleted, c.Version, c.UUID, c.Creator,
	}
}

type noteImageIndexes struct {
	NoteImagePkey index
}

func (i noteImageIndexes) AsSlice() []index {
	return []index{
		i.NoteImagePkey,
	}
}

type noteImageForeignKeys struct {
	NoteImageNoteImageCreatorFkey foreignKey
}

func (f noteImageForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{
		f.NoteImageNoteImageCreatorFkey,
	}
}

type noteImageUniques struct{}

func (u noteImageUniques) AsSlice() []constraint {
	return []constraint{}
}

type noteImageChecks struct{}

func (c noteImageChecks) AsSlice() []check {
	return []check{}
}

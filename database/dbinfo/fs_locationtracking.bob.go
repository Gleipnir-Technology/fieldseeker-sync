// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var FSLocationtrackings = Table[
	fsLocationtrackingColumns,
	fsLocationtrackingIndexes,
	fsLocationtrackingForeignKeys,
	fsLocationtrackingUniques,
	fsLocationtrackingChecks,
]{
	Schema: "",
	Name:   "fs_locationtracking",
	Columns: fsLocationtrackingColumns{
		Accuracy: column{
			Name:      "accuracy",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creationdate: column{
			Name:      "creationdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Creator: column{
			Name:      "creator",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editdate: column{
			Name:      "editdate",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Editor: column{
			Name:      "editor",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Fieldtech: column{
			Name:      "fieldtech",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Globalid: column{
			Name:      "globalid",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Objectid: column{
			Name:      "objectid",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedDate: column{
			Name:      "created_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		CreatedUser: column{
			Name:      "created_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryX: column{
			Name:      "geometry_x",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		GeometryY: column{
			Name:      "geometry_y",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedDate: column{
			Name:      "last_edited_date",
			DBType:    "bigint",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		LastEditedUser: column{
			Name:      "last_edited_user",
			DBType:    "text",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Updated: column{
			Name:      "updated",
			DBType:    "timestamp without time zone",
			Default:   "CURRENT_TIMESTAMP",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: fsLocationtrackingIndexes{
		FSLocationtrackingPkey: index{
			Type: "btree",
			Name: "fs_locationtracking_pkey",
			Columns: []indexColumn{
				{
					Name:         "objectid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "fs_locationtracking_pkey",
		Columns: []string{"objectid"},
		Comment: "",
	},

	Comment: "",
}

type fsLocationtrackingColumns struct {
	Accuracy       column
	Creationdate   column
	Creator        column
	Editdate       column
	Editor         column
	Fieldtech      column
	Globalid       column
	Objectid       column
	CreatedDate    column
	CreatedUser    column
	GeometryX      column
	GeometryY      column
	LastEditedDate column
	LastEditedUser column
	Updated        column
}

func (c fsLocationtrackingColumns) AsSlice() []column {
	return []column{
		c.Accuracy, c.Creationdate, c.Creator, c.Editdate, c.Editor, c.Fieldtech, c.Globalid, c.Objectid, c.CreatedDate, c.CreatedUser, c.GeometryX, c.GeometryY, c.LastEditedDate, c.LastEditedUser, c.Updated,
	}
}

type fsLocationtrackingIndexes struct {
	FSLocationtrackingPkey index
}

func (i fsLocationtrackingIndexes) AsSlice() []index {
	return []index{
		i.FSLocationtrackingPkey,
	}
}

type fsLocationtrackingForeignKeys struct{}

func (f fsLocationtrackingForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type fsLocationtrackingUniques struct{}

func (u fsLocationtrackingUniques) AsSlice() []constraint {
	return []constraint{}
}

type fsLocationtrackingChecks struct{}

func (c fsLocationtrackingChecks) AsSlice() []check {
	return []check{}
}

// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

import "github.com/aarondl/opt/null"

var HistoryNotes = Table[
	historyNoteColumns,
	historyNoteIndexes,
	historyNoteForeignKeys,
	historyNoteUniques,
	historyNoteChecks,
]{
	Schema: "",
	Name:   "history_note",
	Columns: historyNoteColumns{
		Created: column{
			Name:      "created",
			DBType:    "timestamp without time zone",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Latitude: column{
			Name:      "latitude",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Longitude: column{
			Name:      "longitude",
			DBType:    "double precision",
			Default:   "NULL",
			Comment:   "",
			Nullable:  true,
			Generated: false,
			AutoIncr:  false,
		},
		Text: column{
			Name:      "text",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		Version: column{
			Name:      "version",
			DBType:    "integer",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		UUID: column{
			Name:      "uuid",
			DBType:    "text",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},
	Indexes: historyNoteIndexes{
		HistoryNotePkey: index{
			Type: "btree",
			Name: "history_note_pkey",
			Columns: []indexColumn{
				{
					Name:         "uuid",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
				{
					Name:         "version",
					Desc:         null.FromCond(false, true),
					IsExpression: false,
				},
			},
			Unique:        true,
			Comment:       "",
			NullsFirst:    []bool{false, false},
			NullsDistinct: false,
			Where:         "",
			Include:       []string{},
		},
	},
	PrimaryKey: &constraint{
		Name:    "history_note_pkey",
		Columns: []string{"uuid", "version"},
		Comment: "",
	},

	Comment: "",
}

type historyNoteColumns struct {
	Created   column
	Latitude  column
	Longitude column
	Text      column
	Version   column
	UUID      column
}

func (c historyNoteColumns) AsSlice() []column {
	return []column{
		c.Created, c.Latitude, c.Longitude, c.Text, c.Version, c.UUID,
	}
}

type historyNoteIndexes struct {
	HistoryNotePkey index
}

func (i historyNoteIndexes) AsSlice() []index {
	return []index{
		i.HistoryNotePkey,
	}
}

type historyNoteForeignKeys struct{}

func (f historyNoteForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{}
}

type historyNoteUniques struct{}

func (u historyNoteUniques) AsSlice() []constraint {
	return []constraint{}
}

type historyNoteChecks struct{}

func (c historyNoteChecks) AsSlice() []check {
	return []check{}
}

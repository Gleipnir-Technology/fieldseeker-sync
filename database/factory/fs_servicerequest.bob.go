// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"context"
	"testing"
	"time"

	models "github.com/Gleipnir-Technology/fieldseeker-sync/database/models"
	"github.com/aarondl/opt/null"
	"github.com/aarondl/opt/omit"
	"github.com/aarondl/opt/omitnull"
	"github.com/jaswdr/faker/v2"
	"github.com/stephenafamo/bob"
)

type FSServicerequestMod interface {
	Apply(context.Context, *FSServicerequestTemplate)
}

type FSServicerequestModFunc func(context.Context, *FSServicerequestTemplate)

func (f FSServicerequestModFunc) Apply(ctx context.Context, n *FSServicerequestTemplate) {
	f(ctx, n)
}

type FSServicerequestModSlice []FSServicerequestMod

func (mods FSServicerequestModSlice) Apply(ctx context.Context, n *FSServicerequestTemplate) {
	for _, f := range mods {
		f.Apply(ctx, n)
	}
}

// FSServicerequestTemplate is an object representing the database table.
// all columns are optional and should be set by mods
type FSServicerequestTemplate struct {
	Accepted              func() null.Val[int16]
	Acceptedby            func() null.Val[string]
	Accepteddate          func() null.Val[int64]
	Allowed               func() null.Val[string]
	Assignedtech          func() null.Val[string]
	Clraddr1              func() null.Val[string]
	Clraddr2              func() null.Val[string]
	Clranon               func() null.Val[int16]
	Clrcity               func() null.Val[string]
	Clrcompany            func() null.Val[string]
	Clrcontpref           func() null.Val[string]
	Clremail              func() null.Val[string]
	Clrfname              func() null.Val[string]
	Clrother              func() null.Val[string]
	Clrphone1             func() null.Val[string]
	Clrphone2             func() null.Val[string]
	Clrstate              func() null.Val[string]
	Clrzip                func() null.Val[string]
	Comments              func() null.Val[string]
	Creationdate          func() null.Val[int64]
	Creator               func() null.Val[string]
	Datetimeclosed        func() null.Val[int64]
	Duedate               func() null.Val[int64]
	Entrytech             func() null.Val[string]
	Estcompletedate       func() null.Val[int64]
	Externalerror         func() null.Val[string]
	Externalid            func() null.Val[string]
	Editdate              func() null.Val[int64]
	Editor                func() null.Val[string]
	Firstresponsedate     func() null.Val[int64]
	Globalid              func() null.Val[string]
	Issuesreported        func() null.Val[string]
	Jurisdiction          func() null.Val[string]
	Nextaction            func() null.Val[string]
	Notificationtimestamp func() null.Val[string]
	Notified              func() null.Val[int16]
	Notifieddate          func() null.Val[int64]
	Objectid              func() int32
	Pointlocid            func() null.Val[string]
	Priority              func() null.Val[string]
	Recdatetime           func() null.Val[int64]
	Recordstatus          func() null.Val[int16]
	Rejectedby            func() null.Val[string]
	Rejecteddate          func() null.Val[int64]
	Rejectedreason        func() null.Val[string]
	Reqaddr1              func() null.Val[string]
	Reqaddr2              func() null.Val[string]
	Reqcity               func() null.Val[string]
	Reqcompany            func() null.Val[string]
	Reqcrossst            func() null.Val[string]
	Reqdescr              func() null.Val[string]
	Reqfldnotes           func() null.Val[string]
	Reqmapgrid            func() null.Val[string]
	Reqnotesforcust       func() null.Val[string]
	Reqnotesfortech       func() null.Val[string]
	Reqpermission         func() null.Val[int16]
	Reqprogramactions     func() null.Val[string]
	Reqstate              func() null.Val[string]
	Reqsubdiv             func() null.Val[string]
	Reqtarget             func() null.Val[string]
	Reqzip                func() null.Val[string]
	Responsedaycount      func() null.Val[int16]
	Reviewed              func() null.Val[int16]
	Reviewedby            func() null.Val[string]
	Revieweddate          func() null.Val[int64]
	Scheduled             func() null.Val[int16]
	Scheduleddate         func() null.Val[int64]
	Source                func() null.Val[string]
	SRNumber              func() null.Val[int64]
	Status                func() null.Val[string]
	Supervisor            func() null.Val[string]
	Techclosed            func() null.Val[string]
	Validx                func() null.Val[string]
	Validy                func() null.Val[string]
	Xvalue                func() null.Val[string]
	Yvalue                func() null.Val[string]
	Zone                  func() null.Val[string]
	Zone2                 func() null.Val[string]
	CreatedDate           func() null.Val[int64]
	CreatedUser           func() null.Val[string]
	GeometryX             func() null.Val[float64]
	GeometryY             func() null.Val[float64]
	LastEditedDate        func() null.Val[int64]
	LastEditedUser        func() null.Val[string]
	Dog                   func() null.Val[int64]
	Spanish               func() null.Val[int64]
	ScheduleNotes         func() null.Val[string]
	SchedulePeriod        func() null.Val[string]
	Updated               func() time.Time

	f *Factory

	alreadyPersisted bool
}

// Apply mods to the FSServicerequestTemplate
func (o *FSServicerequestTemplate) Apply(ctx context.Context, mods ...FSServicerequestMod) {
	for _, mod := range mods {
		mod.Apply(ctx, o)
	}
}

// setModelRels creates and sets the relationships on *models.FSServicerequest
// according to the relationships in the template. Nothing is inserted into the db
func (t FSServicerequestTemplate) setModelRels(o *models.FSServicerequest) {}

// BuildSetter returns an *models.FSServicerequestSetter
// this does nothing with the relationship templates
func (o FSServicerequestTemplate) BuildSetter() *models.FSServicerequestSetter {
	m := &models.FSServicerequestSetter{}

	if o.Accepted != nil {
		val := o.Accepted()
		m.Accepted = omitnull.FromNull(val)
	}
	if o.Acceptedby != nil {
		val := o.Acceptedby()
		m.Acceptedby = omitnull.FromNull(val)
	}
	if o.Accepteddate != nil {
		val := o.Accepteddate()
		m.Accepteddate = omitnull.FromNull(val)
	}
	if o.Allowed != nil {
		val := o.Allowed()
		m.Allowed = omitnull.FromNull(val)
	}
	if o.Assignedtech != nil {
		val := o.Assignedtech()
		m.Assignedtech = omitnull.FromNull(val)
	}
	if o.Clraddr1 != nil {
		val := o.Clraddr1()
		m.Clraddr1 = omitnull.FromNull(val)
	}
	if o.Clraddr2 != nil {
		val := o.Clraddr2()
		m.Clraddr2 = omitnull.FromNull(val)
	}
	if o.Clranon != nil {
		val := o.Clranon()
		m.Clranon = omitnull.FromNull(val)
	}
	if o.Clrcity != nil {
		val := o.Clrcity()
		m.Clrcity = omitnull.FromNull(val)
	}
	if o.Clrcompany != nil {
		val := o.Clrcompany()
		m.Clrcompany = omitnull.FromNull(val)
	}
	if o.Clrcontpref != nil {
		val := o.Clrcontpref()
		m.Clrcontpref = omitnull.FromNull(val)
	}
	if o.Clremail != nil {
		val := o.Clremail()
		m.Clremail = omitnull.FromNull(val)
	}
	if o.Clrfname != nil {
		val := o.Clrfname()
		m.Clrfname = omitnull.FromNull(val)
	}
	if o.Clrother != nil {
		val := o.Clrother()
		m.Clrother = omitnull.FromNull(val)
	}
	if o.Clrphone1 != nil {
		val := o.Clrphone1()
		m.Clrphone1 = omitnull.FromNull(val)
	}
	if o.Clrphone2 != nil {
		val := o.Clrphone2()
		m.Clrphone2 = omitnull.FromNull(val)
	}
	if o.Clrstate != nil {
		val := o.Clrstate()
		m.Clrstate = omitnull.FromNull(val)
	}
	if o.Clrzip != nil {
		val := o.Clrzip()
		m.Clrzip = omitnull.FromNull(val)
	}
	if o.Comments != nil {
		val := o.Comments()
		m.Comments = omitnull.FromNull(val)
	}
	if o.Creationdate != nil {
		val := o.Creationdate()
		m.Creationdate = omitnull.FromNull(val)
	}
	if o.Creator != nil {
		val := o.Creator()
		m.Creator = omitnull.FromNull(val)
	}
	if o.Datetimeclosed != nil {
		val := o.Datetimeclosed()
		m.Datetimeclosed = omitnull.FromNull(val)
	}
	if o.Duedate != nil {
		val := o.Duedate()
		m.Duedate = omitnull.FromNull(val)
	}
	if o.Entrytech != nil {
		val := o.Entrytech()
		m.Entrytech = omitnull.FromNull(val)
	}
	if o.Estcompletedate != nil {
		val := o.Estcompletedate()
		m.Estcompletedate = omitnull.FromNull(val)
	}
	if o.Externalerror != nil {
		val := o.Externalerror()
		m.Externalerror = omitnull.FromNull(val)
	}
	if o.Externalid != nil {
		val := o.Externalid()
		m.Externalid = omitnull.FromNull(val)
	}
	if o.Editdate != nil {
		val := o.Editdate()
		m.Editdate = omitnull.FromNull(val)
	}
	if o.Editor != nil {
		val := o.Editor()
		m.Editor = omitnull.FromNull(val)
	}
	if o.Firstresponsedate != nil {
		val := o.Firstresponsedate()
		m.Firstresponsedate = omitnull.FromNull(val)
	}
	if o.Globalid != nil {
		val := o.Globalid()
		m.Globalid = omitnull.FromNull(val)
	}
	if o.Issuesreported != nil {
		val := o.Issuesreported()
		m.Issuesreported = omitnull.FromNull(val)
	}
	if o.Jurisdiction != nil {
		val := o.Jurisdiction()
		m.Jurisdiction = omitnull.FromNull(val)
	}
	if o.Nextaction != nil {
		val := o.Nextaction()
		m.Nextaction = omitnull.FromNull(val)
	}
	if o.Notificationtimestamp != nil {
		val := o.Notificationtimestamp()
		m.Notificationtimestamp = omitnull.FromNull(val)
	}
	if o.Notified != nil {
		val := o.Notified()
		m.Notified = omitnull.FromNull(val)
	}
	if o.Notifieddate != nil {
		val := o.Notifieddate()
		m.Notifieddate = omitnull.FromNull(val)
	}
	if o.Objectid != nil {
		val := o.Objectid()
		m.Objectid = omit.From(val)
	}
	if o.Pointlocid != nil {
		val := o.Pointlocid()
		m.Pointlocid = omitnull.FromNull(val)
	}
	if o.Priority != nil {
		val := o.Priority()
		m.Priority = omitnull.FromNull(val)
	}
	if o.Recdatetime != nil {
		val := o.Recdatetime()
		m.Recdatetime = omitnull.FromNull(val)
	}
	if o.Recordstatus != nil {
		val := o.Recordstatus()
		m.Recordstatus = omitnull.FromNull(val)
	}
	if o.Rejectedby != nil {
		val := o.Rejectedby()
		m.Rejectedby = omitnull.FromNull(val)
	}
	if o.Rejecteddate != nil {
		val := o.Rejecteddate()
		m.Rejecteddate = omitnull.FromNull(val)
	}
	if o.Rejectedreason != nil {
		val := o.Rejectedreason()
		m.Rejectedreason = omitnull.FromNull(val)
	}
	if o.Reqaddr1 != nil {
		val := o.Reqaddr1()
		m.Reqaddr1 = omitnull.FromNull(val)
	}
	if o.Reqaddr2 != nil {
		val := o.Reqaddr2()
		m.Reqaddr2 = omitnull.FromNull(val)
	}
	if o.Reqcity != nil {
		val := o.Reqcity()
		m.Reqcity = omitnull.FromNull(val)
	}
	if o.Reqcompany != nil {
		val := o.Reqcompany()
		m.Reqcompany = omitnull.FromNull(val)
	}
	if o.Reqcrossst != nil {
		val := o.Reqcrossst()
		m.Reqcrossst = omitnull.FromNull(val)
	}
	if o.Reqdescr != nil {
		val := o.Reqdescr()
		m.Reqdescr = omitnull.FromNull(val)
	}
	if o.Reqfldnotes != nil {
		val := o.Reqfldnotes()
		m.Reqfldnotes = omitnull.FromNull(val)
	}
	if o.Reqmapgrid != nil {
		val := o.Reqmapgrid()
		m.Reqmapgrid = omitnull.FromNull(val)
	}
	if o.Reqnotesforcust != nil {
		val := o.Reqnotesforcust()
		m.Reqnotesforcust = omitnull.FromNull(val)
	}
	if o.Reqnotesfortech != nil {
		val := o.Reqnotesfortech()
		m.Reqnotesfortech = omitnull.FromNull(val)
	}
	if o.Reqpermission != nil {
		val := o.Reqpermission()
		m.Reqpermission = omitnull.FromNull(val)
	}
	if o.Reqprogramactions != nil {
		val := o.Reqprogramactions()
		m.Reqprogramactions = omitnull.FromNull(val)
	}
	if o.Reqstate != nil {
		val := o.Reqstate()
		m.Reqstate = omitnull.FromNull(val)
	}
	if o.Reqsubdiv != nil {
		val := o.Reqsubdiv()
		m.Reqsubdiv = omitnull.FromNull(val)
	}
	if o.Reqtarget != nil {
		val := o.Reqtarget()
		m.Reqtarget = omitnull.FromNull(val)
	}
	if o.Reqzip != nil {
		val := o.Reqzip()
		m.Reqzip = omitnull.FromNull(val)
	}
	if o.Responsedaycount != nil {
		val := o.Responsedaycount()
		m.Responsedaycount = omitnull.FromNull(val)
	}
	if o.Reviewed != nil {
		val := o.Reviewed()
		m.Reviewed = omitnull.FromNull(val)
	}
	if o.Reviewedby != nil {
		val := o.Reviewedby()
		m.Reviewedby = omitnull.FromNull(val)
	}
	if o.Revieweddate != nil {
		val := o.Revieweddate()
		m.Revieweddate = omitnull.FromNull(val)
	}
	if o.Scheduled != nil {
		val := o.Scheduled()
		m.Scheduled = omitnull.FromNull(val)
	}
	if o.Scheduleddate != nil {
		val := o.Scheduleddate()
		m.Scheduleddate = omitnull.FromNull(val)
	}
	if o.Source != nil {
		val := o.Source()
		m.Source = omitnull.FromNull(val)
	}
	if o.SRNumber != nil {
		val := o.SRNumber()
		m.SRNumber = omitnull.FromNull(val)
	}
	if o.Status != nil {
		val := o.Status()
		m.Status = omitnull.FromNull(val)
	}
	if o.Supervisor != nil {
		val := o.Supervisor()
		m.Supervisor = omitnull.FromNull(val)
	}
	if o.Techclosed != nil {
		val := o.Techclosed()
		m.Techclosed = omitnull.FromNull(val)
	}
	if o.Validx != nil {
		val := o.Validx()
		m.Validx = omitnull.FromNull(val)
	}
	if o.Validy != nil {
		val := o.Validy()
		m.Validy = omitnull.FromNull(val)
	}
	if o.Xvalue != nil {
		val := o.Xvalue()
		m.Xvalue = omitnull.FromNull(val)
	}
	if o.Yvalue != nil {
		val := o.Yvalue()
		m.Yvalue = omitnull.FromNull(val)
	}
	if o.Zone != nil {
		val := o.Zone()
		m.Zone = omitnull.FromNull(val)
	}
	if o.Zone2 != nil {
		val := o.Zone2()
		m.Zone2 = omitnull.FromNull(val)
	}
	if o.CreatedDate != nil {
		val := o.CreatedDate()
		m.CreatedDate = omitnull.FromNull(val)
	}
	if o.CreatedUser != nil {
		val := o.CreatedUser()
		m.CreatedUser = omitnull.FromNull(val)
	}
	if o.GeometryX != nil {
		val := o.GeometryX()
		m.GeometryX = omitnull.FromNull(val)
	}
	if o.GeometryY != nil {
		val := o.GeometryY()
		m.GeometryY = omitnull.FromNull(val)
	}
	if o.LastEditedDate != nil {
		val := o.LastEditedDate()
		m.LastEditedDate = omitnull.FromNull(val)
	}
	if o.LastEditedUser != nil {
		val := o.LastEditedUser()
		m.LastEditedUser = omitnull.FromNull(val)
	}
	if o.Dog != nil {
		val := o.Dog()
		m.Dog = omitnull.FromNull(val)
	}
	if o.Spanish != nil {
		val := o.Spanish()
		m.Spanish = omitnull.FromNull(val)
	}
	if o.ScheduleNotes != nil {
		val := o.ScheduleNotes()
		m.ScheduleNotes = omitnull.FromNull(val)
	}
	if o.SchedulePeriod != nil {
		val := o.SchedulePeriod()
		m.SchedulePeriod = omitnull.FromNull(val)
	}
	if o.Updated != nil {
		val := o.Updated()
		m.Updated = omit.From(val)
	}

	return m
}

// BuildManySetter returns an []*models.FSServicerequestSetter
// this does nothing with the relationship templates
func (o FSServicerequestTemplate) BuildManySetter(number int) []*models.FSServicerequestSetter {
	m := make([]*models.FSServicerequestSetter, number)

	for i := range m {
		m[i] = o.BuildSetter()
	}

	return m
}

// Build returns an *models.FSServicerequest
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use FSServicerequestTemplate.Create
func (o FSServicerequestTemplate) Build() *models.FSServicerequest {
	m := &models.FSServicerequest{}

	if o.Accepted != nil {
		m.Accepted = o.Accepted()
	}
	if o.Acceptedby != nil {
		m.Acceptedby = o.Acceptedby()
	}
	if o.Accepteddate != nil {
		m.Accepteddate = o.Accepteddate()
	}
	if o.Allowed != nil {
		m.Allowed = o.Allowed()
	}
	if o.Assignedtech != nil {
		m.Assignedtech = o.Assignedtech()
	}
	if o.Clraddr1 != nil {
		m.Clraddr1 = o.Clraddr1()
	}
	if o.Clraddr2 != nil {
		m.Clraddr2 = o.Clraddr2()
	}
	if o.Clranon != nil {
		m.Clranon = o.Clranon()
	}
	if o.Clrcity != nil {
		m.Clrcity = o.Clrcity()
	}
	if o.Clrcompany != nil {
		m.Clrcompany = o.Clrcompany()
	}
	if o.Clrcontpref != nil {
		m.Clrcontpref = o.Clrcontpref()
	}
	if o.Clremail != nil {
		m.Clremail = o.Clremail()
	}
	if o.Clrfname != nil {
		m.Clrfname = o.Clrfname()
	}
	if o.Clrother != nil {
		m.Clrother = o.Clrother()
	}
	if o.Clrphone1 != nil {
		m.Clrphone1 = o.Clrphone1()
	}
	if o.Clrphone2 != nil {
		m.Clrphone2 = o.Clrphone2()
	}
	if o.Clrstate != nil {
		m.Clrstate = o.Clrstate()
	}
	if o.Clrzip != nil {
		m.Clrzip = o.Clrzip()
	}
	if o.Comments != nil {
		m.Comments = o.Comments()
	}
	if o.Creationdate != nil {
		m.Creationdate = o.Creationdate()
	}
	if o.Creator != nil {
		m.Creator = o.Creator()
	}
	if o.Datetimeclosed != nil {
		m.Datetimeclosed = o.Datetimeclosed()
	}
	if o.Duedate != nil {
		m.Duedate = o.Duedate()
	}
	if o.Entrytech != nil {
		m.Entrytech = o.Entrytech()
	}
	if o.Estcompletedate != nil {
		m.Estcompletedate = o.Estcompletedate()
	}
	if o.Externalerror != nil {
		m.Externalerror = o.Externalerror()
	}
	if o.Externalid != nil {
		m.Externalid = o.Externalid()
	}
	if o.Editdate != nil {
		m.Editdate = o.Editdate()
	}
	if o.Editor != nil {
		m.Editor = o.Editor()
	}
	if o.Firstresponsedate != nil {
		m.Firstresponsedate = o.Firstresponsedate()
	}
	if o.Globalid != nil {
		m.Globalid = o.Globalid()
	}
	if o.Issuesreported != nil {
		m.Issuesreported = o.Issuesreported()
	}
	if o.Jurisdiction != nil {
		m.Jurisdiction = o.Jurisdiction()
	}
	if o.Nextaction != nil {
		m.Nextaction = o.Nextaction()
	}
	if o.Notificationtimestamp != nil {
		m.Notificationtimestamp = o.Notificationtimestamp()
	}
	if o.Notified != nil {
		m.Notified = o.Notified()
	}
	if o.Notifieddate != nil {
		m.Notifieddate = o.Notifieddate()
	}
	if o.Objectid != nil {
		m.Objectid = o.Objectid()
	}
	if o.Pointlocid != nil {
		m.Pointlocid = o.Pointlocid()
	}
	if o.Priority != nil {
		m.Priority = o.Priority()
	}
	if o.Recdatetime != nil {
		m.Recdatetime = o.Recdatetime()
	}
	if o.Recordstatus != nil {
		m.Recordstatus = o.Recordstatus()
	}
	if o.Rejectedby != nil {
		m.Rejectedby = o.Rejectedby()
	}
	if o.Rejecteddate != nil {
		m.Rejecteddate = o.Rejecteddate()
	}
	if o.Rejectedreason != nil {
		m.Rejectedreason = o.Rejectedreason()
	}
	if o.Reqaddr1 != nil {
		m.Reqaddr1 = o.Reqaddr1()
	}
	if o.Reqaddr2 != nil {
		m.Reqaddr2 = o.Reqaddr2()
	}
	if o.Reqcity != nil {
		m.Reqcity = o.Reqcity()
	}
	if o.Reqcompany != nil {
		m.Reqcompany = o.Reqcompany()
	}
	if o.Reqcrossst != nil {
		m.Reqcrossst = o.Reqcrossst()
	}
	if o.Reqdescr != nil {
		m.Reqdescr = o.Reqdescr()
	}
	if o.Reqfldnotes != nil {
		m.Reqfldnotes = o.Reqfldnotes()
	}
	if o.Reqmapgrid != nil {
		m.Reqmapgrid = o.Reqmapgrid()
	}
	if o.Reqnotesforcust != nil {
		m.Reqnotesforcust = o.Reqnotesforcust()
	}
	if o.Reqnotesfortech != nil {
		m.Reqnotesfortech = o.Reqnotesfortech()
	}
	if o.Reqpermission != nil {
		m.Reqpermission = o.Reqpermission()
	}
	if o.Reqprogramactions != nil {
		m.Reqprogramactions = o.Reqprogramactions()
	}
	if o.Reqstate != nil {
		m.Reqstate = o.Reqstate()
	}
	if o.Reqsubdiv != nil {
		m.Reqsubdiv = o.Reqsubdiv()
	}
	if o.Reqtarget != nil {
		m.Reqtarget = o.Reqtarget()
	}
	if o.Reqzip != nil {
		m.Reqzip = o.Reqzip()
	}
	if o.Responsedaycount != nil {
		m.Responsedaycount = o.Responsedaycount()
	}
	if o.Reviewed != nil {
		m.Reviewed = o.Reviewed()
	}
	if o.Reviewedby != nil {
		m.Reviewedby = o.Reviewedby()
	}
	if o.Revieweddate != nil {
		m.Revieweddate = o.Revieweddate()
	}
	if o.Scheduled != nil {
		m.Scheduled = o.Scheduled()
	}
	if o.Scheduleddate != nil {
		m.Scheduleddate = o.Scheduleddate()
	}
	if o.Source != nil {
		m.Source = o.Source()
	}
	if o.SRNumber != nil {
		m.SRNumber = o.SRNumber()
	}
	if o.Status != nil {
		m.Status = o.Status()
	}
	if o.Supervisor != nil {
		m.Supervisor = o.Supervisor()
	}
	if o.Techclosed != nil {
		m.Techclosed = o.Techclosed()
	}
	if o.Validx != nil {
		m.Validx = o.Validx()
	}
	if o.Validy != nil {
		m.Validy = o.Validy()
	}
	if o.Xvalue != nil {
		m.Xvalue = o.Xvalue()
	}
	if o.Yvalue != nil {
		m.Yvalue = o.Yvalue()
	}
	if o.Zone != nil {
		m.Zone = o.Zone()
	}
	if o.Zone2 != nil {
		m.Zone2 = o.Zone2()
	}
	if o.CreatedDate != nil {
		m.CreatedDate = o.CreatedDate()
	}
	if o.CreatedUser != nil {
		m.CreatedUser = o.CreatedUser()
	}
	if o.GeometryX != nil {
		m.GeometryX = o.GeometryX()
	}
	if o.GeometryY != nil {
		m.GeometryY = o.GeometryY()
	}
	if o.LastEditedDate != nil {
		m.LastEditedDate = o.LastEditedDate()
	}
	if o.LastEditedUser != nil {
		m.LastEditedUser = o.LastEditedUser()
	}
	if o.Dog != nil {
		m.Dog = o.Dog()
	}
	if o.Spanish != nil {
		m.Spanish = o.Spanish()
	}
	if o.ScheduleNotes != nil {
		m.ScheduleNotes = o.ScheduleNotes()
	}
	if o.SchedulePeriod != nil {
		m.SchedulePeriod = o.SchedulePeriod()
	}
	if o.Updated != nil {
		m.Updated = o.Updated()
	}

	o.setModelRels(m)

	return m
}

// BuildMany returns an models.FSServicerequestSlice
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use FSServicerequestTemplate.CreateMany
func (o FSServicerequestTemplate) BuildMany(number int) models.FSServicerequestSlice {
	m := make(models.FSServicerequestSlice, number)

	for i := range m {
		m[i] = o.Build()
	}

	return m
}

func ensureCreatableFSServicerequest(m *models.FSServicerequestSetter) {
	if !(m.Objectid.IsValue()) {
		val := random_int32(nil)
		m.Objectid = omit.From(val)
	}
}

// insertOptRels creates and inserts any optional the relationships on *models.FSServicerequest
// according to the relationships in the template.
// any required relationship should have already exist on the model
func (o *FSServicerequestTemplate) insertOptRels(ctx context.Context, exec bob.Executor, m *models.FSServicerequest) error {
	var err error

	return err
}

// Create builds a fsServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
func (o *FSServicerequestTemplate) Create(ctx context.Context, exec bob.Executor) (*models.FSServicerequest, error) {
	var err error
	opt := o.BuildSetter()
	ensureCreatableFSServicerequest(opt)

	m, err := models.FSServicerequests.Insert(opt).One(ctx, exec)
	if err != nil {
		return nil, err
	}

	if err := o.insertOptRels(ctx, exec, m); err != nil {
		return nil, err
	}
	return m, err
}

// MustCreate builds a fsServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o *FSServicerequestTemplate) MustCreate(ctx context.Context, exec bob.Executor) *models.FSServicerequest {
	m, err := o.Create(ctx, exec)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateOrFail builds a fsServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o *FSServicerequestTemplate) CreateOrFail(ctx context.Context, tb testing.TB, exec bob.Executor) *models.FSServicerequest {
	tb.Helper()
	m, err := o.Create(ctx, exec)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// CreateMany builds multiple fsServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
func (o FSServicerequestTemplate) CreateMany(ctx context.Context, exec bob.Executor, number int) (models.FSServicerequestSlice, error) {
	var err error
	m := make(models.FSServicerequestSlice, number)

	for i := range m {
		m[i], err = o.Create(ctx, exec)
		if err != nil {
			return nil, err
		}
	}

	return m, nil
}

// MustCreateMany builds multiple fsServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o FSServicerequestTemplate) MustCreateMany(ctx context.Context, exec bob.Executor, number int) models.FSServicerequestSlice {
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateManyOrFail builds multiple fsServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o FSServicerequestTemplate) CreateManyOrFail(ctx context.Context, tb testing.TB, exec bob.Executor, number int) models.FSServicerequestSlice {
	tb.Helper()
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// FSServicerequest has methods that act as mods for the FSServicerequestTemplate
var FSServicerequestMods fsServicerequestMods

type fsServicerequestMods struct{}

func (m fsServicerequestMods) RandomizeAllColumns(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModSlice{
		FSServicerequestMods.RandomAccepted(f),
		FSServicerequestMods.RandomAcceptedby(f),
		FSServicerequestMods.RandomAccepteddate(f),
		FSServicerequestMods.RandomAllowed(f),
		FSServicerequestMods.RandomAssignedtech(f),
		FSServicerequestMods.RandomClraddr1(f),
		FSServicerequestMods.RandomClraddr2(f),
		FSServicerequestMods.RandomClranon(f),
		FSServicerequestMods.RandomClrcity(f),
		FSServicerequestMods.RandomClrcompany(f),
		FSServicerequestMods.RandomClrcontpref(f),
		FSServicerequestMods.RandomClremail(f),
		FSServicerequestMods.RandomClrfname(f),
		FSServicerequestMods.RandomClrother(f),
		FSServicerequestMods.RandomClrphone1(f),
		FSServicerequestMods.RandomClrphone2(f),
		FSServicerequestMods.RandomClrstate(f),
		FSServicerequestMods.RandomClrzip(f),
		FSServicerequestMods.RandomComments(f),
		FSServicerequestMods.RandomCreationdate(f),
		FSServicerequestMods.RandomCreator(f),
		FSServicerequestMods.RandomDatetimeclosed(f),
		FSServicerequestMods.RandomDuedate(f),
		FSServicerequestMods.RandomEntrytech(f),
		FSServicerequestMods.RandomEstcompletedate(f),
		FSServicerequestMods.RandomExternalerror(f),
		FSServicerequestMods.RandomExternalid(f),
		FSServicerequestMods.RandomEditdate(f),
		FSServicerequestMods.RandomEditor(f),
		FSServicerequestMods.RandomFirstresponsedate(f),
		FSServicerequestMods.RandomGlobalid(f),
		FSServicerequestMods.RandomIssuesreported(f),
		FSServicerequestMods.RandomJurisdiction(f),
		FSServicerequestMods.RandomNextaction(f),
		FSServicerequestMods.RandomNotificationtimestamp(f),
		FSServicerequestMods.RandomNotified(f),
		FSServicerequestMods.RandomNotifieddate(f),
		FSServicerequestMods.RandomObjectid(f),
		FSServicerequestMods.RandomPointlocid(f),
		FSServicerequestMods.RandomPriority(f),
		FSServicerequestMods.RandomRecdatetime(f),
		FSServicerequestMods.RandomRecordstatus(f),
		FSServicerequestMods.RandomRejectedby(f),
		FSServicerequestMods.RandomRejecteddate(f),
		FSServicerequestMods.RandomRejectedreason(f),
		FSServicerequestMods.RandomReqaddr1(f),
		FSServicerequestMods.RandomReqaddr2(f),
		FSServicerequestMods.RandomReqcity(f),
		FSServicerequestMods.RandomReqcompany(f),
		FSServicerequestMods.RandomReqcrossst(f),
		FSServicerequestMods.RandomReqdescr(f),
		FSServicerequestMods.RandomReqfldnotes(f),
		FSServicerequestMods.RandomReqmapgrid(f),
		FSServicerequestMods.RandomReqnotesforcust(f),
		FSServicerequestMods.RandomReqnotesfortech(f),
		FSServicerequestMods.RandomReqpermission(f),
		FSServicerequestMods.RandomReqprogramactions(f),
		FSServicerequestMods.RandomReqstate(f),
		FSServicerequestMods.RandomReqsubdiv(f),
		FSServicerequestMods.RandomReqtarget(f),
		FSServicerequestMods.RandomReqzip(f),
		FSServicerequestMods.RandomResponsedaycount(f),
		FSServicerequestMods.RandomReviewed(f),
		FSServicerequestMods.RandomReviewedby(f),
		FSServicerequestMods.RandomRevieweddate(f),
		FSServicerequestMods.RandomScheduled(f),
		FSServicerequestMods.RandomScheduleddate(f),
		FSServicerequestMods.RandomSource(f),
		FSServicerequestMods.RandomSRNumber(f),
		FSServicerequestMods.RandomStatus(f),
		FSServicerequestMods.RandomSupervisor(f),
		FSServicerequestMods.RandomTechclosed(f),
		FSServicerequestMods.RandomValidx(f),
		FSServicerequestMods.RandomValidy(f),
		FSServicerequestMods.RandomXvalue(f),
		FSServicerequestMods.RandomYvalue(f),
		FSServicerequestMods.RandomZone(f),
		FSServicerequestMods.RandomZone2(f),
		FSServicerequestMods.RandomCreatedDate(f),
		FSServicerequestMods.RandomCreatedUser(f),
		FSServicerequestMods.RandomGeometryX(f),
		FSServicerequestMods.RandomGeometryY(f),
		FSServicerequestMods.RandomLastEditedDate(f),
		FSServicerequestMods.RandomLastEditedUser(f),
		FSServicerequestMods.RandomDog(f),
		FSServicerequestMods.RandomSpanish(f),
		FSServicerequestMods.RandomScheduleNotes(f),
		FSServicerequestMods.RandomSchedulePeriod(f),
		FSServicerequestMods.RandomUpdated(f),
	}
}

// Set the model columns to this value
func (m fsServicerequestMods) Accepted(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) AcceptedFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepted = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetAccepted() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepted = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomAccepted(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomAcceptedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Acceptedby(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) AcceptedbyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Acceptedby = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetAcceptedby() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Acceptedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomAcceptedby(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomAcceptedbyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Accepteddate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) AccepteddateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepteddate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetAccepteddate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepteddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomAccepteddate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomAccepteddateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Allowed(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Allowed = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) AllowedFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Allowed = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetAllowed() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Allowed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomAllowed(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Allowed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomAllowedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Allowed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Assignedtech(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) AssignedtechFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Assignedtech = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetAssignedtech() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Assignedtech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomAssignedtech(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomAssignedtechNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clraddr1(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Clraddr1Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr1 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClraddr1() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClraddr1(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClraddr1NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clraddr2(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Clraddr2Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr2 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClraddr2() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClraddr2(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClraddr2NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clranon(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClranonFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clranon = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClranon() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clranon = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClranon(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClranonNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrcity(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrcityFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcity = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrcity() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrcity(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrcityNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrcompany(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrcompanyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcompany = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrcompany() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcompany = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrcompany(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrcompanyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrcontpref(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrcontprefFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcontpref = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrcontpref() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcontpref = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrcontpref(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrcontprefNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clremail(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clremail = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClremailFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clremail = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClremail() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clremail = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClremail(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clremail = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClremailNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clremail = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrfname(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrfnameFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrfname = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrfname() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrfname = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrfname(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrfnameNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrother(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrother = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrotherFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrother = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrother() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrother = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrother(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrother = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrotherNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrother = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrphone1(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Clrphone1Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone1 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrphone1() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrphone1(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrphone1NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrphone2(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Clrphone2Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone2 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrphone2() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrphone2(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrphone2NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrstate(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrstateFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrstate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrstate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrstate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrstate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrstateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Clrzip(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ClrzipFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrzip = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetClrzip() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrzip = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomClrzip(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomClrzipNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Comments(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Comments = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) CommentsFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Comments = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetComments() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Comments = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomComments(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomCommentsNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Creationdate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) CreationdateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creationdate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetCreationdate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creationdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomCreationdate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomCreationdateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Creator(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creator = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) CreatorFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creator = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetCreator() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creator = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomCreator(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomCreatorNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Datetimeclosed(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) DatetimeclosedFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Datetimeclosed = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetDatetimeclosed() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Datetimeclosed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomDatetimeclosed(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomDatetimeclosedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Duedate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) DuedateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Duedate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetDuedate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Duedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomDuedate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomDuedateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Entrytech(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) EntrytechFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Entrytech = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetEntrytech() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Entrytech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomEntrytech(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomEntrytechNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Estcompletedate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) EstcompletedateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Estcompletedate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetEstcompletedate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Estcompletedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomEstcompletedate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomEstcompletedateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Externalerror(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ExternalerrorFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalerror = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetExternalerror() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalerror = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomExternalerror(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomExternalerrorNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Externalid(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ExternalidFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalid = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetExternalid() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomExternalid(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomExternalidNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Externalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Editdate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) EditdateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editdate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetEditdate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomEditdate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomEditdateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Editor(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editor = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) EditorFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editor = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetEditor() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editor = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomEditor(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomEditorNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Firstresponsedate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) FirstresponsedateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Firstresponsedate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetFirstresponsedate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Firstresponsedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomFirstresponsedate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomFirstresponsedateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Globalid(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Globalid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) GlobalidFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Globalid = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetGlobalid() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Globalid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomGlobalid(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomGlobalidNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Issuesreported(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) IssuesreportedFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Issuesreported = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetIssuesreported() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Issuesreported = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomIssuesreported(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomIssuesreportedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Jurisdiction(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) JurisdictionFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Jurisdiction = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetJurisdiction() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Jurisdiction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomJurisdiction(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomJurisdictionNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Nextaction(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) NextactionFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Nextaction = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetNextaction() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Nextaction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomNextaction(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomNextactionNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Notificationtimestamp(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) NotificationtimestampFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notificationtimestamp = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetNotificationtimestamp() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notificationtimestamp = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomNotificationtimestamp(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomNotificationtimestampNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Notified(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notified = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) NotifiedFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notified = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetNotified() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notified = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomNotified(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notified = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomNotifiedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notified = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Notifieddate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) NotifieddateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notifieddate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetNotifieddate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notifieddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomNotifieddate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomNotifieddateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Objectid(val int32) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Objectid = func() int32 { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ObjectidFunc(f func() int32) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Objectid = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetObjectid() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Objectid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m fsServicerequestMods) RandomObjectid(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Objectid = func() int32 {
			return random_int32(f)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Pointlocid(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) PointlocidFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Pointlocid = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetPointlocid() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Pointlocid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomPointlocid(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomPointlocidNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Priority(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Priority = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) PriorityFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Priority = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetPriority() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Priority = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomPriority(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Priority = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomPriorityNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Priority = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Recdatetime(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RecdatetimeFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recdatetime = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRecdatetime() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recdatetime = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRecdatetime(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRecdatetimeNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Recordstatus(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RecordstatusFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recordstatus = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRecordstatus() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recordstatus = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRecordstatus(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRecordstatusNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Rejectedby(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RejectedbyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedby = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRejectedby() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRejectedby(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRejectedbyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Rejecteddate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RejecteddateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejecteddate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRejecteddate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejecteddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRejecteddate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRejecteddateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Rejectedreason(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RejectedreasonFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedreason = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRejectedreason() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedreason = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRejectedreason(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRejectedreasonNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqaddr1(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Reqaddr1Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr1 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqaddr1() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqaddr1(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqaddr1NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqaddr2(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Reqaddr2Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr2 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqaddr2() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqaddr2(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqaddr2NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqcity(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqcityFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcity = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqcity() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqcity(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqcityNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqcompany(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqcompanyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcompany = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqcompany() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcompany = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqcompany(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqcompanyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqcrossst(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqcrossstFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcrossst = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqcrossst() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcrossst = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqcrossst(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqcrossstNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqdescr(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqdescrFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqdescr = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqdescr() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqdescr = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqdescr(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqdescrNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqfldnotes(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqfldnotesFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqfldnotes = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqfldnotes() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqfldnotes = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqfldnotes(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqfldnotesNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqmapgrid(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqmapgridFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqmapgrid = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqmapgrid() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqmapgrid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqmapgrid(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqmapgridNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqnotesforcust(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqnotesforcustFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesforcust = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqnotesforcust() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesforcust = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqnotesforcust(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqnotesforcustNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqnotesfortech(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqnotesfortechFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesfortech = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqnotesfortech() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesfortech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqnotesfortech(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqnotesfortechNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqpermission(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqpermissionFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqpermission = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqpermission() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqpermission = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqpermission(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqpermissionNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqprogramactions(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqprogramactionsFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqprogramactions = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqprogramactions() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqprogramactions = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqprogramactions(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqprogramactionsNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqstate(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqstateFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqstate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqstate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqstate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqstate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqstateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqsubdiv(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqsubdivFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqsubdiv = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqsubdiv() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqsubdiv = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqsubdiv(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqsubdivNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqtarget(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqtargetFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqtarget = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqtarget() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqtarget = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqtarget(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqtargetNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reqzip(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReqzipFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqzip = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReqzip() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqzip = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReqzip(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReqzipNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Responsedaycount(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ResponsedaycountFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Responsedaycount = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetResponsedaycount() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Responsedaycount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomResponsedaycount(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomResponsedaycountNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reviewed(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReviewedFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewed = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReviewed() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReviewed(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReviewedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Reviewedby(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ReviewedbyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewedby = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetReviewedby() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomReviewedby(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomReviewedbyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Revieweddate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) RevieweddateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Revieweddate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetRevieweddate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Revieweddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomRevieweddate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomRevieweddateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Scheduled(val null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ScheduledFunc(f func() null.Val[int16]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduled = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetScheduled() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduled = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomScheduled(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomScheduledNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Scheduleddate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ScheduleddateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduleddate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetScheduleddate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduleddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomScheduleddate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomScheduleddateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Source(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Source = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) SourceFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Source = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetSource() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Source = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomSource(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Source = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomSourceNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Source = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) SRNumber(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) SRNumberFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SRNumber = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetSRNumber() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SRNumber = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomSRNumber(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomSRNumberNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Status(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Status = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) StatusFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Status = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetStatus() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Status = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomStatus(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Status = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomStatusNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Status = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Supervisor(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) SupervisorFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Supervisor = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetSupervisor() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Supervisor = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomSupervisor(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomSupervisorNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Techclosed(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) TechclosedFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Techclosed = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetTechclosed() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Techclosed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomTechclosed(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomTechclosedNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Validx(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validx = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ValidxFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validx = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetValidx() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validx = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomValidx(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validx = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomValidxNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validx = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Validy(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validy = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ValidyFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validy = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetValidy() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validy = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomValidy(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validy = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomValidyNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Validy = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Xvalue(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) XvalueFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Xvalue = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetXvalue() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Xvalue = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomXvalue(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomXvalueNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Yvalue(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) YvalueFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Yvalue = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetYvalue() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Yvalue = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomYvalue(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomYvalueNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Zone(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ZoneFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetZone() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomZone(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomZoneNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Zone2(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) Zone2Func(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone2 = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetZone2() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomZone2(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomZone2NotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) CreatedDate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) CreatedDateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedDate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetCreatedDate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomCreatedDate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomCreatedDateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) CreatedUser(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) CreatedUserFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedUser = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetCreatedUser() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomCreatedUser(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomCreatedUserNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) GeometryX(val null.Val[float64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) GeometryXFunc(f func() null.Val[float64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryX = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetGeometryX() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryX = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomGeometryX(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomGeometryXNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) GeometryY(val null.Val[float64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) GeometryYFunc(f func() null.Val[float64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryY = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetGeometryY() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryY = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomGeometryY(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomGeometryYNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) LastEditedDate(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) LastEditedDateFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedDate = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetLastEditedDate() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomLastEditedDate(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomLastEditedDateNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) LastEditedUser(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) LastEditedUserFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedUser = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetLastEditedUser() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomLastEditedUser(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomLastEditedUserNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Dog(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Dog = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) DogFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Dog = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetDog() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Dog = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomDog(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Dog = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomDogNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Dog = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Spanish(val null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) SpanishFunc(f func() null.Val[int64]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Spanish = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetSpanish() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Spanish = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomSpanish(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomSpanishNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) ScheduleNotes(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) ScheduleNotesFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.ScheduleNotes = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetScheduleNotes() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.ScheduleNotes = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomScheduleNotes(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomScheduleNotesNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) SchedulePeriod(val null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) SchedulePeriodFunc(f func() null.Val[string]) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SchedulePeriod = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetSchedulePeriod() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SchedulePeriod = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsServicerequestMods) RandomSchedulePeriod(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsServicerequestMods) RandomSchedulePeriodNotNull(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsServicerequestMods) Updated(val time.Time) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Updated = func() time.Time { return val }
	})
}

// Set the Column from the function
func (m fsServicerequestMods) UpdatedFunc(f func() time.Time) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Updated = f
	})
}

// Clear any values for the column
func (m fsServicerequestMods) UnsetUpdated() FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Updated = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m fsServicerequestMods) RandomUpdated(f *faker.Faker) FSServicerequestMod {
	return FSServicerequestModFunc(func(_ context.Context, o *FSServicerequestTemplate) {
		o.Updated = func() time.Time {
			return random_time_Time(f)
		}
	})
}

func (m fsServicerequestMods) WithParentsCascading() FSServicerequestMod {
	return FSServicerequestModFunc(func(ctx context.Context, o *FSServicerequestTemplate) {
		if isDone, _ := fsServicerequestWithParentsCascadingCtx.Value(ctx); isDone {
			return
		}
		ctx = fsServicerequestWithParentsCascadingCtx.WithValue(ctx, true)
	})
}

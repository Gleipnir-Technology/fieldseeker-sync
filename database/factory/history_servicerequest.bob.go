// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"context"
	"testing"
	"time"

	models "github.com/Gleipnir-Technology/fieldseeker-sync/database/models"
	"github.com/aarondl/opt/null"
	"github.com/aarondl/opt/omit"
	"github.com/aarondl/opt/omitnull"
	"github.com/jaswdr/faker/v2"
	"github.com/stephenafamo/bob"
)

type HistoryServicerequestMod interface {
	Apply(context.Context, *HistoryServicerequestTemplate)
}

type HistoryServicerequestModFunc func(context.Context, *HistoryServicerequestTemplate)

func (f HistoryServicerequestModFunc) Apply(ctx context.Context, n *HistoryServicerequestTemplate) {
	f(ctx, n)
}

type HistoryServicerequestModSlice []HistoryServicerequestMod

func (mods HistoryServicerequestModSlice) Apply(ctx context.Context, n *HistoryServicerequestTemplate) {
	for _, f := range mods {
		f.Apply(ctx, n)
	}
}

// HistoryServicerequestTemplate is an object representing the database table.
// all columns are optional and should be set by mods
type HistoryServicerequestTemplate struct {
	Accepted              func() null.Val[int16]
	Acceptedby            func() null.Val[string]
	Accepteddate          func() null.Val[int64]
	Allowed               func() null.Val[string]
	Assignedtech          func() null.Val[string]
	Clraddr1              func() null.Val[string]
	Clraddr2              func() null.Val[string]
	Clranon               func() null.Val[int16]
	Clrcity               func() null.Val[string]
	Clrcompany            func() null.Val[string]
	Clrcontpref           func() null.Val[string]
	Clremail              func() null.Val[string]
	Clrfname              func() null.Val[string]
	Clrother              func() null.Val[string]
	Clrphone1             func() null.Val[string]
	Clrphone2             func() null.Val[string]
	Clrstate              func() null.Val[string]
	Clrzip                func() null.Val[string]
	Comments              func() null.Val[string]
	Creationdate          func() null.Val[int64]
	Creator               func() null.Val[string]
	Datetimeclosed        func() null.Val[int64]
	Dog                   func() null.Val[int64]
	Duedate               func() null.Val[int64]
	Entrytech             func() null.Val[string]
	Estcompletedate       func() null.Val[int64]
	Externalerror         func() null.Val[string]
	Externalid            func() null.Val[string]
	Editdate              func() null.Val[int64]
	Editor                func() null.Val[string]
	Firstresponsedate     func() null.Val[int64]
	Globalid              func() null.Val[string]
	Issuesreported        func() null.Val[string]
	Jurisdiction          func() null.Val[string]
	Nextaction            func() null.Val[string]
	Notificationtimestamp func() null.Val[string]
	Notified              func() null.Val[int16]
	Notifieddate          func() null.Val[int64]
	Objectid              func() int32
	Pointlocid            func() null.Val[string]
	Priority              func() null.Val[string]
	Recdatetime           func() null.Val[int64]
	Recordstatus          func() null.Val[int16]
	Rejectedby            func() null.Val[string]
	Rejecteddate          func() null.Val[int64]
	Rejectedreason        func() null.Val[string]
	Reqaddr1              func() null.Val[string]
	Reqaddr2              func() null.Val[string]
	Reqcity               func() null.Val[string]
	Reqcompany            func() null.Val[string]
	Reqcrossst            func() null.Val[string]
	Reqdescr              func() null.Val[string]
	Reqfldnotes           func() null.Val[string]
	Reqmapgrid            func() null.Val[string]
	Reqnotesforcust       func() null.Val[string]
	Reqnotesfortech       func() null.Val[string]
	Reqpermission         func() null.Val[int16]
	Reqprogramactions     func() null.Val[string]
	Reqstate              func() null.Val[string]
	Reqsubdiv             func() null.Val[string]
	Reqtarget             func() null.Val[string]
	Reqzip                func() null.Val[string]
	Responsedaycount      func() null.Val[int16]
	Reviewed              func() null.Val[int16]
	Reviewedby            func() null.Val[string]
	Revieweddate          func() null.Val[int64]
	Scheduled             func() null.Val[int16]
	Scheduleddate         func() null.Val[int64]
	Source                func() null.Val[string]
	SRNumber              func() null.Val[int64]
	Status                func() null.Val[string]
	Supervisor            func() null.Val[string]
	Spanish               func() null.Val[int64]
	Techclosed            func() null.Val[string]
	Validx                func() null.Val[string]
	Validy                func() null.Val[string]
	Xvalue                func() null.Val[string]
	Yvalue                func() null.Val[string]
	Zone                  func() null.Val[string]
	Zone2                 func() null.Val[string]
	Created               func() null.Val[time.Time]
	CreatedDate           func() null.Val[int64]
	CreatedUser           func() null.Val[string]
	GeometryX             func() null.Val[float64]
	GeometryY             func() null.Val[float64]
	LastEditedDate        func() null.Val[int64]
	LastEditedUser        func() null.Val[string]
	ScheduleNotes         func() null.Val[string]
	SchedulePeriod        func() null.Val[string]
	Version               func() int32

	f *Factory

	alreadyPersisted bool
}

// Apply mods to the HistoryServicerequestTemplate
func (o *HistoryServicerequestTemplate) Apply(ctx context.Context, mods ...HistoryServicerequestMod) {
	for _, mod := range mods {
		mod.Apply(ctx, o)
	}
}

// setModelRels creates and sets the relationships on *models.HistoryServicerequest
// according to the relationships in the template. Nothing is inserted into the db
func (t HistoryServicerequestTemplate) setModelRels(o *models.HistoryServicerequest) {}

// BuildSetter returns an *models.HistoryServicerequestSetter
// this does nothing with the relationship templates
func (o HistoryServicerequestTemplate) BuildSetter() *models.HistoryServicerequestSetter {
	m := &models.HistoryServicerequestSetter{}

	if o.Accepted != nil {
		val := o.Accepted()
		m.Accepted = omitnull.FromNull(val)
	}
	if o.Acceptedby != nil {
		val := o.Acceptedby()
		m.Acceptedby = omitnull.FromNull(val)
	}
	if o.Accepteddate != nil {
		val := o.Accepteddate()
		m.Accepteddate = omitnull.FromNull(val)
	}
	if o.Allowed != nil {
		val := o.Allowed()
		m.Allowed = omitnull.FromNull(val)
	}
	if o.Assignedtech != nil {
		val := o.Assignedtech()
		m.Assignedtech = omitnull.FromNull(val)
	}
	if o.Clraddr1 != nil {
		val := o.Clraddr1()
		m.Clraddr1 = omitnull.FromNull(val)
	}
	if o.Clraddr2 != nil {
		val := o.Clraddr2()
		m.Clraddr2 = omitnull.FromNull(val)
	}
	if o.Clranon != nil {
		val := o.Clranon()
		m.Clranon = omitnull.FromNull(val)
	}
	if o.Clrcity != nil {
		val := o.Clrcity()
		m.Clrcity = omitnull.FromNull(val)
	}
	if o.Clrcompany != nil {
		val := o.Clrcompany()
		m.Clrcompany = omitnull.FromNull(val)
	}
	if o.Clrcontpref != nil {
		val := o.Clrcontpref()
		m.Clrcontpref = omitnull.FromNull(val)
	}
	if o.Clremail != nil {
		val := o.Clremail()
		m.Clremail = omitnull.FromNull(val)
	}
	if o.Clrfname != nil {
		val := o.Clrfname()
		m.Clrfname = omitnull.FromNull(val)
	}
	if o.Clrother != nil {
		val := o.Clrother()
		m.Clrother = omitnull.FromNull(val)
	}
	if o.Clrphone1 != nil {
		val := o.Clrphone1()
		m.Clrphone1 = omitnull.FromNull(val)
	}
	if o.Clrphone2 != nil {
		val := o.Clrphone2()
		m.Clrphone2 = omitnull.FromNull(val)
	}
	if o.Clrstate != nil {
		val := o.Clrstate()
		m.Clrstate = omitnull.FromNull(val)
	}
	if o.Clrzip != nil {
		val := o.Clrzip()
		m.Clrzip = omitnull.FromNull(val)
	}
	if o.Comments != nil {
		val := o.Comments()
		m.Comments = omitnull.FromNull(val)
	}
	if o.Creationdate != nil {
		val := o.Creationdate()
		m.Creationdate = omitnull.FromNull(val)
	}
	if o.Creator != nil {
		val := o.Creator()
		m.Creator = omitnull.FromNull(val)
	}
	if o.Datetimeclosed != nil {
		val := o.Datetimeclosed()
		m.Datetimeclosed = omitnull.FromNull(val)
	}
	if o.Dog != nil {
		val := o.Dog()
		m.Dog = omitnull.FromNull(val)
	}
	if o.Duedate != nil {
		val := o.Duedate()
		m.Duedate = omitnull.FromNull(val)
	}
	if o.Entrytech != nil {
		val := o.Entrytech()
		m.Entrytech = omitnull.FromNull(val)
	}
	if o.Estcompletedate != nil {
		val := o.Estcompletedate()
		m.Estcompletedate = omitnull.FromNull(val)
	}
	if o.Externalerror != nil {
		val := o.Externalerror()
		m.Externalerror = omitnull.FromNull(val)
	}
	if o.Externalid != nil {
		val := o.Externalid()
		m.Externalid = omitnull.FromNull(val)
	}
	if o.Editdate != nil {
		val := o.Editdate()
		m.Editdate = omitnull.FromNull(val)
	}
	if o.Editor != nil {
		val := o.Editor()
		m.Editor = omitnull.FromNull(val)
	}
	if o.Firstresponsedate != nil {
		val := o.Firstresponsedate()
		m.Firstresponsedate = omitnull.FromNull(val)
	}
	if o.Globalid != nil {
		val := o.Globalid()
		m.Globalid = omitnull.FromNull(val)
	}
	if o.Issuesreported != nil {
		val := o.Issuesreported()
		m.Issuesreported = omitnull.FromNull(val)
	}
	if o.Jurisdiction != nil {
		val := o.Jurisdiction()
		m.Jurisdiction = omitnull.FromNull(val)
	}
	if o.Nextaction != nil {
		val := o.Nextaction()
		m.Nextaction = omitnull.FromNull(val)
	}
	if o.Notificationtimestamp != nil {
		val := o.Notificationtimestamp()
		m.Notificationtimestamp = omitnull.FromNull(val)
	}
	if o.Notified != nil {
		val := o.Notified()
		m.Notified = omitnull.FromNull(val)
	}
	if o.Notifieddate != nil {
		val := o.Notifieddate()
		m.Notifieddate = omitnull.FromNull(val)
	}
	if o.Objectid != nil {
		val := o.Objectid()
		m.Objectid = omit.From(val)
	}
	if o.Pointlocid != nil {
		val := o.Pointlocid()
		m.Pointlocid = omitnull.FromNull(val)
	}
	if o.Priority != nil {
		val := o.Priority()
		m.Priority = omitnull.FromNull(val)
	}
	if o.Recdatetime != nil {
		val := o.Recdatetime()
		m.Recdatetime = omitnull.FromNull(val)
	}
	if o.Recordstatus != nil {
		val := o.Recordstatus()
		m.Recordstatus = omitnull.FromNull(val)
	}
	if o.Rejectedby != nil {
		val := o.Rejectedby()
		m.Rejectedby = omitnull.FromNull(val)
	}
	if o.Rejecteddate != nil {
		val := o.Rejecteddate()
		m.Rejecteddate = omitnull.FromNull(val)
	}
	if o.Rejectedreason != nil {
		val := o.Rejectedreason()
		m.Rejectedreason = omitnull.FromNull(val)
	}
	if o.Reqaddr1 != nil {
		val := o.Reqaddr1()
		m.Reqaddr1 = omitnull.FromNull(val)
	}
	if o.Reqaddr2 != nil {
		val := o.Reqaddr2()
		m.Reqaddr2 = omitnull.FromNull(val)
	}
	if o.Reqcity != nil {
		val := o.Reqcity()
		m.Reqcity = omitnull.FromNull(val)
	}
	if o.Reqcompany != nil {
		val := o.Reqcompany()
		m.Reqcompany = omitnull.FromNull(val)
	}
	if o.Reqcrossst != nil {
		val := o.Reqcrossst()
		m.Reqcrossst = omitnull.FromNull(val)
	}
	if o.Reqdescr != nil {
		val := o.Reqdescr()
		m.Reqdescr = omitnull.FromNull(val)
	}
	if o.Reqfldnotes != nil {
		val := o.Reqfldnotes()
		m.Reqfldnotes = omitnull.FromNull(val)
	}
	if o.Reqmapgrid != nil {
		val := o.Reqmapgrid()
		m.Reqmapgrid = omitnull.FromNull(val)
	}
	if o.Reqnotesforcust != nil {
		val := o.Reqnotesforcust()
		m.Reqnotesforcust = omitnull.FromNull(val)
	}
	if o.Reqnotesfortech != nil {
		val := o.Reqnotesfortech()
		m.Reqnotesfortech = omitnull.FromNull(val)
	}
	if o.Reqpermission != nil {
		val := o.Reqpermission()
		m.Reqpermission = omitnull.FromNull(val)
	}
	if o.Reqprogramactions != nil {
		val := o.Reqprogramactions()
		m.Reqprogramactions = omitnull.FromNull(val)
	}
	if o.Reqstate != nil {
		val := o.Reqstate()
		m.Reqstate = omitnull.FromNull(val)
	}
	if o.Reqsubdiv != nil {
		val := o.Reqsubdiv()
		m.Reqsubdiv = omitnull.FromNull(val)
	}
	if o.Reqtarget != nil {
		val := o.Reqtarget()
		m.Reqtarget = omitnull.FromNull(val)
	}
	if o.Reqzip != nil {
		val := o.Reqzip()
		m.Reqzip = omitnull.FromNull(val)
	}
	if o.Responsedaycount != nil {
		val := o.Responsedaycount()
		m.Responsedaycount = omitnull.FromNull(val)
	}
	if o.Reviewed != nil {
		val := o.Reviewed()
		m.Reviewed = omitnull.FromNull(val)
	}
	if o.Reviewedby != nil {
		val := o.Reviewedby()
		m.Reviewedby = omitnull.FromNull(val)
	}
	if o.Revieweddate != nil {
		val := o.Revieweddate()
		m.Revieweddate = omitnull.FromNull(val)
	}
	if o.Scheduled != nil {
		val := o.Scheduled()
		m.Scheduled = omitnull.FromNull(val)
	}
	if o.Scheduleddate != nil {
		val := o.Scheduleddate()
		m.Scheduleddate = omitnull.FromNull(val)
	}
	if o.Source != nil {
		val := o.Source()
		m.Source = omitnull.FromNull(val)
	}
	if o.SRNumber != nil {
		val := o.SRNumber()
		m.SRNumber = omitnull.FromNull(val)
	}
	if o.Status != nil {
		val := o.Status()
		m.Status = omitnull.FromNull(val)
	}
	if o.Supervisor != nil {
		val := o.Supervisor()
		m.Supervisor = omitnull.FromNull(val)
	}
	if o.Spanish != nil {
		val := o.Spanish()
		m.Spanish = omitnull.FromNull(val)
	}
	if o.Techclosed != nil {
		val := o.Techclosed()
		m.Techclosed = omitnull.FromNull(val)
	}
	if o.Validx != nil {
		val := o.Validx()
		m.Validx = omitnull.FromNull(val)
	}
	if o.Validy != nil {
		val := o.Validy()
		m.Validy = omitnull.FromNull(val)
	}
	if o.Xvalue != nil {
		val := o.Xvalue()
		m.Xvalue = omitnull.FromNull(val)
	}
	if o.Yvalue != nil {
		val := o.Yvalue()
		m.Yvalue = omitnull.FromNull(val)
	}
	if o.Zone != nil {
		val := o.Zone()
		m.Zone = omitnull.FromNull(val)
	}
	if o.Zone2 != nil {
		val := o.Zone2()
		m.Zone2 = omitnull.FromNull(val)
	}
	if o.Created != nil {
		val := o.Created()
		m.Created = omitnull.FromNull(val)
	}
	if o.CreatedDate != nil {
		val := o.CreatedDate()
		m.CreatedDate = omitnull.FromNull(val)
	}
	if o.CreatedUser != nil {
		val := o.CreatedUser()
		m.CreatedUser = omitnull.FromNull(val)
	}
	if o.GeometryX != nil {
		val := o.GeometryX()
		m.GeometryX = omitnull.FromNull(val)
	}
	if o.GeometryY != nil {
		val := o.GeometryY()
		m.GeometryY = omitnull.FromNull(val)
	}
	if o.LastEditedDate != nil {
		val := o.LastEditedDate()
		m.LastEditedDate = omitnull.FromNull(val)
	}
	if o.LastEditedUser != nil {
		val := o.LastEditedUser()
		m.LastEditedUser = omitnull.FromNull(val)
	}
	if o.ScheduleNotes != nil {
		val := o.ScheduleNotes()
		m.ScheduleNotes = omitnull.FromNull(val)
	}
	if o.SchedulePeriod != nil {
		val := o.SchedulePeriod()
		m.SchedulePeriod = omitnull.FromNull(val)
	}
	if o.Version != nil {
		val := o.Version()
		m.Version = omit.From(val)
	}

	return m
}

// BuildManySetter returns an []*models.HistoryServicerequestSetter
// this does nothing with the relationship templates
func (o HistoryServicerequestTemplate) BuildManySetter(number int) []*models.HistoryServicerequestSetter {
	m := make([]*models.HistoryServicerequestSetter, number)

	for i := range m {
		m[i] = o.BuildSetter()
	}

	return m
}

// Build returns an *models.HistoryServicerequest
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use HistoryServicerequestTemplate.Create
func (o HistoryServicerequestTemplate) Build() *models.HistoryServicerequest {
	m := &models.HistoryServicerequest{}

	if o.Accepted != nil {
		m.Accepted = o.Accepted()
	}
	if o.Acceptedby != nil {
		m.Acceptedby = o.Acceptedby()
	}
	if o.Accepteddate != nil {
		m.Accepteddate = o.Accepteddate()
	}
	if o.Allowed != nil {
		m.Allowed = o.Allowed()
	}
	if o.Assignedtech != nil {
		m.Assignedtech = o.Assignedtech()
	}
	if o.Clraddr1 != nil {
		m.Clraddr1 = o.Clraddr1()
	}
	if o.Clraddr2 != nil {
		m.Clraddr2 = o.Clraddr2()
	}
	if o.Clranon != nil {
		m.Clranon = o.Clranon()
	}
	if o.Clrcity != nil {
		m.Clrcity = o.Clrcity()
	}
	if o.Clrcompany != nil {
		m.Clrcompany = o.Clrcompany()
	}
	if o.Clrcontpref != nil {
		m.Clrcontpref = o.Clrcontpref()
	}
	if o.Clremail != nil {
		m.Clremail = o.Clremail()
	}
	if o.Clrfname != nil {
		m.Clrfname = o.Clrfname()
	}
	if o.Clrother != nil {
		m.Clrother = o.Clrother()
	}
	if o.Clrphone1 != nil {
		m.Clrphone1 = o.Clrphone1()
	}
	if o.Clrphone2 != nil {
		m.Clrphone2 = o.Clrphone2()
	}
	if o.Clrstate != nil {
		m.Clrstate = o.Clrstate()
	}
	if o.Clrzip != nil {
		m.Clrzip = o.Clrzip()
	}
	if o.Comments != nil {
		m.Comments = o.Comments()
	}
	if o.Creationdate != nil {
		m.Creationdate = o.Creationdate()
	}
	if o.Creator != nil {
		m.Creator = o.Creator()
	}
	if o.Datetimeclosed != nil {
		m.Datetimeclosed = o.Datetimeclosed()
	}
	if o.Dog != nil {
		m.Dog = o.Dog()
	}
	if o.Duedate != nil {
		m.Duedate = o.Duedate()
	}
	if o.Entrytech != nil {
		m.Entrytech = o.Entrytech()
	}
	if o.Estcompletedate != nil {
		m.Estcompletedate = o.Estcompletedate()
	}
	if o.Externalerror != nil {
		m.Externalerror = o.Externalerror()
	}
	if o.Externalid != nil {
		m.Externalid = o.Externalid()
	}
	if o.Editdate != nil {
		m.Editdate = o.Editdate()
	}
	if o.Editor != nil {
		m.Editor = o.Editor()
	}
	if o.Firstresponsedate != nil {
		m.Firstresponsedate = o.Firstresponsedate()
	}
	if o.Globalid != nil {
		m.Globalid = o.Globalid()
	}
	if o.Issuesreported != nil {
		m.Issuesreported = o.Issuesreported()
	}
	if o.Jurisdiction != nil {
		m.Jurisdiction = o.Jurisdiction()
	}
	if o.Nextaction != nil {
		m.Nextaction = o.Nextaction()
	}
	if o.Notificationtimestamp != nil {
		m.Notificationtimestamp = o.Notificationtimestamp()
	}
	if o.Notified != nil {
		m.Notified = o.Notified()
	}
	if o.Notifieddate != nil {
		m.Notifieddate = o.Notifieddate()
	}
	if o.Objectid != nil {
		m.Objectid = o.Objectid()
	}
	if o.Pointlocid != nil {
		m.Pointlocid = o.Pointlocid()
	}
	if o.Priority != nil {
		m.Priority = o.Priority()
	}
	if o.Recdatetime != nil {
		m.Recdatetime = o.Recdatetime()
	}
	if o.Recordstatus != nil {
		m.Recordstatus = o.Recordstatus()
	}
	if o.Rejectedby != nil {
		m.Rejectedby = o.Rejectedby()
	}
	if o.Rejecteddate != nil {
		m.Rejecteddate = o.Rejecteddate()
	}
	if o.Rejectedreason != nil {
		m.Rejectedreason = o.Rejectedreason()
	}
	if o.Reqaddr1 != nil {
		m.Reqaddr1 = o.Reqaddr1()
	}
	if o.Reqaddr2 != nil {
		m.Reqaddr2 = o.Reqaddr2()
	}
	if o.Reqcity != nil {
		m.Reqcity = o.Reqcity()
	}
	if o.Reqcompany != nil {
		m.Reqcompany = o.Reqcompany()
	}
	if o.Reqcrossst != nil {
		m.Reqcrossst = o.Reqcrossst()
	}
	if o.Reqdescr != nil {
		m.Reqdescr = o.Reqdescr()
	}
	if o.Reqfldnotes != nil {
		m.Reqfldnotes = o.Reqfldnotes()
	}
	if o.Reqmapgrid != nil {
		m.Reqmapgrid = o.Reqmapgrid()
	}
	if o.Reqnotesforcust != nil {
		m.Reqnotesforcust = o.Reqnotesforcust()
	}
	if o.Reqnotesfortech != nil {
		m.Reqnotesfortech = o.Reqnotesfortech()
	}
	if o.Reqpermission != nil {
		m.Reqpermission = o.Reqpermission()
	}
	if o.Reqprogramactions != nil {
		m.Reqprogramactions = o.Reqprogramactions()
	}
	if o.Reqstate != nil {
		m.Reqstate = o.Reqstate()
	}
	if o.Reqsubdiv != nil {
		m.Reqsubdiv = o.Reqsubdiv()
	}
	if o.Reqtarget != nil {
		m.Reqtarget = o.Reqtarget()
	}
	if o.Reqzip != nil {
		m.Reqzip = o.Reqzip()
	}
	if o.Responsedaycount != nil {
		m.Responsedaycount = o.Responsedaycount()
	}
	if o.Reviewed != nil {
		m.Reviewed = o.Reviewed()
	}
	if o.Reviewedby != nil {
		m.Reviewedby = o.Reviewedby()
	}
	if o.Revieweddate != nil {
		m.Revieweddate = o.Revieweddate()
	}
	if o.Scheduled != nil {
		m.Scheduled = o.Scheduled()
	}
	if o.Scheduleddate != nil {
		m.Scheduleddate = o.Scheduleddate()
	}
	if o.Source != nil {
		m.Source = o.Source()
	}
	if o.SRNumber != nil {
		m.SRNumber = o.SRNumber()
	}
	if o.Status != nil {
		m.Status = o.Status()
	}
	if o.Supervisor != nil {
		m.Supervisor = o.Supervisor()
	}
	if o.Spanish != nil {
		m.Spanish = o.Spanish()
	}
	if o.Techclosed != nil {
		m.Techclosed = o.Techclosed()
	}
	if o.Validx != nil {
		m.Validx = o.Validx()
	}
	if o.Validy != nil {
		m.Validy = o.Validy()
	}
	if o.Xvalue != nil {
		m.Xvalue = o.Xvalue()
	}
	if o.Yvalue != nil {
		m.Yvalue = o.Yvalue()
	}
	if o.Zone != nil {
		m.Zone = o.Zone()
	}
	if o.Zone2 != nil {
		m.Zone2 = o.Zone2()
	}
	if o.Created != nil {
		m.Created = o.Created()
	}
	if o.CreatedDate != nil {
		m.CreatedDate = o.CreatedDate()
	}
	if o.CreatedUser != nil {
		m.CreatedUser = o.CreatedUser()
	}
	if o.GeometryX != nil {
		m.GeometryX = o.GeometryX()
	}
	if o.GeometryY != nil {
		m.GeometryY = o.GeometryY()
	}
	if o.LastEditedDate != nil {
		m.LastEditedDate = o.LastEditedDate()
	}
	if o.LastEditedUser != nil {
		m.LastEditedUser = o.LastEditedUser()
	}
	if o.ScheduleNotes != nil {
		m.ScheduleNotes = o.ScheduleNotes()
	}
	if o.SchedulePeriod != nil {
		m.SchedulePeriod = o.SchedulePeriod()
	}
	if o.Version != nil {
		m.Version = o.Version()
	}

	o.setModelRels(m)

	return m
}

// BuildMany returns an models.HistoryServicerequestSlice
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use HistoryServicerequestTemplate.CreateMany
func (o HistoryServicerequestTemplate) BuildMany(number int) models.HistoryServicerequestSlice {
	m := make(models.HistoryServicerequestSlice, number)

	for i := range m {
		m[i] = o.Build()
	}

	return m
}

func ensureCreatableHistoryServicerequest(m *models.HistoryServicerequestSetter) {
	if !(m.Objectid.IsValue()) {
		val := random_int32(nil)
		m.Objectid = omit.From(val)
	}
	if !(m.Version.IsValue()) {
		val := random_int32(nil)
		m.Version = omit.From(val)
	}
}

// insertOptRels creates and inserts any optional the relationships on *models.HistoryServicerequest
// according to the relationships in the template.
// any required relationship should have already exist on the model
func (o *HistoryServicerequestTemplate) insertOptRels(ctx context.Context, exec bob.Executor, m *models.HistoryServicerequest) error {
	var err error

	return err
}

// Create builds a historyServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
func (o *HistoryServicerequestTemplate) Create(ctx context.Context, exec bob.Executor) (*models.HistoryServicerequest, error) {
	var err error
	opt := o.BuildSetter()
	ensureCreatableHistoryServicerequest(opt)

	m, err := models.HistoryServicerequests.Insert(opt).One(ctx, exec)
	if err != nil {
		return nil, err
	}

	if err := o.insertOptRels(ctx, exec, m); err != nil {
		return nil, err
	}
	return m, err
}

// MustCreate builds a historyServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o *HistoryServicerequestTemplate) MustCreate(ctx context.Context, exec bob.Executor) *models.HistoryServicerequest {
	m, err := o.Create(ctx, exec)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateOrFail builds a historyServicerequest and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o *HistoryServicerequestTemplate) CreateOrFail(ctx context.Context, tb testing.TB, exec bob.Executor) *models.HistoryServicerequest {
	tb.Helper()
	m, err := o.Create(ctx, exec)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// CreateMany builds multiple historyServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
func (o HistoryServicerequestTemplate) CreateMany(ctx context.Context, exec bob.Executor, number int) (models.HistoryServicerequestSlice, error) {
	var err error
	m := make(models.HistoryServicerequestSlice, number)

	for i := range m {
		m[i], err = o.Create(ctx, exec)
		if err != nil {
			return nil, err
		}
	}

	return m, nil
}

// MustCreateMany builds multiple historyServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o HistoryServicerequestTemplate) MustCreateMany(ctx context.Context, exec bob.Executor, number int) models.HistoryServicerequestSlice {
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateManyOrFail builds multiple historyServicerequests and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o HistoryServicerequestTemplate) CreateManyOrFail(ctx context.Context, tb testing.TB, exec bob.Executor, number int) models.HistoryServicerequestSlice {
	tb.Helper()
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// HistoryServicerequest has methods that act as mods for the HistoryServicerequestTemplate
var HistoryServicerequestMods historyServicerequestMods

type historyServicerequestMods struct{}

func (m historyServicerequestMods) RandomizeAllColumns(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModSlice{
		HistoryServicerequestMods.RandomAccepted(f),
		HistoryServicerequestMods.RandomAcceptedby(f),
		HistoryServicerequestMods.RandomAccepteddate(f),
		HistoryServicerequestMods.RandomAllowed(f),
		HistoryServicerequestMods.RandomAssignedtech(f),
		HistoryServicerequestMods.RandomClraddr1(f),
		HistoryServicerequestMods.RandomClraddr2(f),
		HistoryServicerequestMods.RandomClranon(f),
		HistoryServicerequestMods.RandomClrcity(f),
		HistoryServicerequestMods.RandomClrcompany(f),
		HistoryServicerequestMods.RandomClrcontpref(f),
		HistoryServicerequestMods.RandomClremail(f),
		HistoryServicerequestMods.RandomClrfname(f),
		HistoryServicerequestMods.RandomClrother(f),
		HistoryServicerequestMods.RandomClrphone1(f),
		HistoryServicerequestMods.RandomClrphone2(f),
		HistoryServicerequestMods.RandomClrstate(f),
		HistoryServicerequestMods.RandomClrzip(f),
		HistoryServicerequestMods.RandomComments(f),
		HistoryServicerequestMods.RandomCreationdate(f),
		HistoryServicerequestMods.RandomCreator(f),
		HistoryServicerequestMods.RandomDatetimeclosed(f),
		HistoryServicerequestMods.RandomDog(f),
		HistoryServicerequestMods.RandomDuedate(f),
		HistoryServicerequestMods.RandomEntrytech(f),
		HistoryServicerequestMods.RandomEstcompletedate(f),
		HistoryServicerequestMods.RandomExternalerror(f),
		HistoryServicerequestMods.RandomExternalid(f),
		HistoryServicerequestMods.RandomEditdate(f),
		HistoryServicerequestMods.RandomEditor(f),
		HistoryServicerequestMods.RandomFirstresponsedate(f),
		HistoryServicerequestMods.RandomGlobalid(f),
		HistoryServicerequestMods.RandomIssuesreported(f),
		HistoryServicerequestMods.RandomJurisdiction(f),
		HistoryServicerequestMods.RandomNextaction(f),
		HistoryServicerequestMods.RandomNotificationtimestamp(f),
		HistoryServicerequestMods.RandomNotified(f),
		HistoryServicerequestMods.RandomNotifieddate(f),
		HistoryServicerequestMods.RandomObjectid(f),
		HistoryServicerequestMods.RandomPointlocid(f),
		HistoryServicerequestMods.RandomPriority(f),
		HistoryServicerequestMods.RandomRecdatetime(f),
		HistoryServicerequestMods.RandomRecordstatus(f),
		HistoryServicerequestMods.RandomRejectedby(f),
		HistoryServicerequestMods.RandomRejecteddate(f),
		HistoryServicerequestMods.RandomRejectedreason(f),
		HistoryServicerequestMods.RandomReqaddr1(f),
		HistoryServicerequestMods.RandomReqaddr2(f),
		HistoryServicerequestMods.RandomReqcity(f),
		HistoryServicerequestMods.RandomReqcompany(f),
		HistoryServicerequestMods.RandomReqcrossst(f),
		HistoryServicerequestMods.RandomReqdescr(f),
		HistoryServicerequestMods.RandomReqfldnotes(f),
		HistoryServicerequestMods.RandomReqmapgrid(f),
		HistoryServicerequestMods.RandomReqnotesforcust(f),
		HistoryServicerequestMods.RandomReqnotesfortech(f),
		HistoryServicerequestMods.RandomReqpermission(f),
		HistoryServicerequestMods.RandomReqprogramactions(f),
		HistoryServicerequestMods.RandomReqstate(f),
		HistoryServicerequestMods.RandomReqsubdiv(f),
		HistoryServicerequestMods.RandomReqtarget(f),
		HistoryServicerequestMods.RandomReqzip(f),
		HistoryServicerequestMods.RandomResponsedaycount(f),
		HistoryServicerequestMods.RandomReviewed(f),
		HistoryServicerequestMods.RandomReviewedby(f),
		HistoryServicerequestMods.RandomRevieweddate(f),
		HistoryServicerequestMods.RandomScheduled(f),
		HistoryServicerequestMods.RandomScheduleddate(f),
		HistoryServicerequestMods.RandomSource(f),
		HistoryServicerequestMods.RandomSRNumber(f),
		HistoryServicerequestMods.RandomStatus(f),
		HistoryServicerequestMods.RandomSupervisor(f),
		HistoryServicerequestMods.RandomSpanish(f),
		HistoryServicerequestMods.RandomTechclosed(f),
		HistoryServicerequestMods.RandomValidx(f),
		HistoryServicerequestMods.RandomValidy(f),
		HistoryServicerequestMods.RandomXvalue(f),
		HistoryServicerequestMods.RandomYvalue(f),
		HistoryServicerequestMods.RandomZone(f),
		HistoryServicerequestMods.RandomZone2(f),
		HistoryServicerequestMods.RandomCreated(f),
		HistoryServicerequestMods.RandomCreatedDate(f),
		HistoryServicerequestMods.RandomCreatedUser(f),
		HistoryServicerequestMods.RandomGeometryX(f),
		HistoryServicerequestMods.RandomGeometryY(f),
		HistoryServicerequestMods.RandomLastEditedDate(f),
		HistoryServicerequestMods.RandomLastEditedUser(f),
		HistoryServicerequestMods.RandomScheduleNotes(f),
		HistoryServicerequestMods.RandomSchedulePeriod(f),
		HistoryServicerequestMods.RandomVersion(f),
	}
}

// Set the model columns to this value
func (m historyServicerequestMods) Accepted(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) AcceptedFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepted = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetAccepted() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepted = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomAccepted(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomAcceptedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepted = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Acceptedby(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) AcceptedbyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Acceptedby = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetAcceptedby() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Acceptedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomAcceptedby(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomAcceptedbyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Acceptedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Accepteddate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) AccepteddateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepteddate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetAccepteddate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepteddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomAccepteddate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomAccepteddateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Accepteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Allowed(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Allowed = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) AllowedFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Allowed = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetAllowed() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Allowed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomAllowed(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Allowed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomAllowedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Allowed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Assignedtech(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) AssignedtechFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Assignedtech = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetAssignedtech() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Assignedtech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomAssignedtech(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomAssignedtechNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Assignedtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clraddr1(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Clraddr1Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr1 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClraddr1() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClraddr1(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClraddr1NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clraddr2(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Clraddr2Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr2 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClraddr2() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClraddr2(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClraddr2NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clraddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clranon(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClranonFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clranon = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClranon() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clranon = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClranon(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClranonNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clranon = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrcity(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrcityFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcity = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrcity() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrcity(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrcityNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrcompany(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrcompanyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcompany = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrcompany() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcompany = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrcompany(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrcompanyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrcontpref(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrcontprefFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcontpref = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrcontpref() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcontpref = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrcontpref(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrcontprefNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrcontpref = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clremail(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clremail = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClremailFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clremail = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClremail() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clremail = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClremail(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clremail = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClremailNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clremail = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrfname(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrfnameFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrfname = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrfname() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrfname = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrfname(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrfnameNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrfname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrother(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrother = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrotherFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrother = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrother() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrother = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrother(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrother = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrotherNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrother = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrphone1(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Clrphone1Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone1 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrphone1() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrphone1(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrphone1NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrphone2(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Clrphone2Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone2 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrphone2() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrphone2(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrphone2NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrphone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrstate(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrstateFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrstate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrstate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrstate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrstate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrstateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Clrzip(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ClrzipFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrzip = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetClrzip() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrzip = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomClrzip(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomClrzipNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Clrzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Comments(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Comments = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CommentsFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Comments = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetComments() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Comments = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomComments(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCommentsNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Creationdate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CreationdateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creationdate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetCreationdate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creationdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomCreationdate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCreationdateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Creator(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creator = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CreatorFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creator = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetCreator() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creator = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomCreator(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCreatorNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Datetimeclosed(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) DatetimeclosedFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Datetimeclosed = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetDatetimeclosed() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Datetimeclosed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomDatetimeclosed(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomDatetimeclosedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Datetimeclosed = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Dog(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Dog = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) DogFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Dog = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetDog() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Dog = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomDog(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Dog = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomDogNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Dog = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Duedate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) DuedateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Duedate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetDuedate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Duedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomDuedate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomDuedateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Duedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Entrytech(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) EntrytechFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Entrytech = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetEntrytech() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Entrytech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomEntrytech(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomEntrytechNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Entrytech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Estcompletedate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) EstcompletedateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Estcompletedate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetEstcompletedate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Estcompletedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomEstcompletedate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomEstcompletedateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Estcompletedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Externalerror(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ExternalerrorFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalerror = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetExternalerror() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalerror = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomExternalerror(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomExternalerrorNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalerror = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Externalid(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ExternalidFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalid = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetExternalid() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomExternalid(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomExternalidNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Externalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Editdate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) EditdateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editdate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetEditdate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomEditdate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomEditdateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Editor(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editor = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) EditorFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editor = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetEditor() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editor = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomEditor(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomEditorNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Firstresponsedate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) FirstresponsedateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Firstresponsedate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetFirstresponsedate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Firstresponsedate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomFirstresponsedate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomFirstresponsedateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Firstresponsedate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Globalid(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Globalid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) GlobalidFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Globalid = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetGlobalid() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Globalid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomGlobalid(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomGlobalidNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Issuesreported(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) IssuesreportedFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Issuesreported = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetIssuesreported() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Issuesreported = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomIssuesreported(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomIssuesreportedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Issuesreported = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Jurisdiction(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) JurisdictionFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Jurisdiction = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetJurisdiction() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Jurisdiction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomJurisdiction(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomJurisdictionNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Nextaction(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) NextactionFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Nextaction = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetNextaction() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Nextaction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomNextaction(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomNextactionNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Nextaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Notificationtimestamp(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) NotificationtimestampFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notificationtimestamp = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetNotificationtimestamp() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notificationtimestamp = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomNotificationtimestamp(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomNotificationtimestampNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notificationtimestamp = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Notified(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notified = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) NotifiedFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notified = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetNotified() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notified = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomNotified(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notified = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomNotifiedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notified = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Notifieddate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) NotifieddateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notifieddate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetNotifieddate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notifieddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomNotifieddate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomNotifieddateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Notifieddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Objectid(val int32) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Objectid = func() int32 { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ObjectidFunc(f func() int32) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Objectid = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetObjectid() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Objectid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m historyServicerequestMods) RandomObjectid(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Objectid = func() int32 {
			return random_int32(f)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Pointlocid(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) PointlocidFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Pointlocid = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetPointlocid() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Pointlocid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomPointlocid(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomPointlocidNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Priority(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Priority = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) PriorityFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Priority = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetPriority() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Priority = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomPriority(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Priority = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomPriorityNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Priority = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Recdatetime(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RecdatetimeFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recdatetime = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRecdatetime() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recdatetime = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRecdatetime(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRecdatetimeNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Recordstatus(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RecordstatusFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recordstatus = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRecordstatus() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recordstatus = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRecordstatus(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRecordstatusNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Rejectedby(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RejectedbyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedby = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRejectedby() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRejectedby(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRejectedbyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Rejecteddate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RejecteddateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejecteddate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRejecteddate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejecteddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRejecteddate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRejecteddateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejecteddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Rejectedreason(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RejectedreasonFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedreason = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRejectedreason() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedreason = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRejectedreason(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRejectedreasonNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Rejectedreason = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqaddr1(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Reqaddr1Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr1 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqaddr1() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr1 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqaddr1(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqaddr1NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr1 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqaddr2(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Reqaddr2Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr2 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqaddr2() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqaddr2(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqaddr2NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqaddr2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqcity(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqcityFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcity = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqcity() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqcity(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqcityNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqcompany(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqcompanyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcompany = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqcompany() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcompany = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqcompany(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqcompanyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcompany = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqcrossst(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqcrossstFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcrossst = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqcrossst() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcrossst = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqcrossst(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqcrossstNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqcrossst = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqdescr(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqdescrFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqdescr = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqdescr() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqdescr = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqdescr(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqdescrNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqdescr = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqfldnotes(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqfldnotesFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqfldnotes = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqfldnotes() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqfldnotes = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqfldnotes(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqfldnotesNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqfldnotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqmapgrid(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqmapgridFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqmapgrid = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqmapgrid() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqmapgrid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqmapgrid(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqmapgridNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqmapgrid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqnotesforcust(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqnotesforcustFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesforcust = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqnotesforcust() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesforcust = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqnotesforcust(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqnotesforcustNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesforcust = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqnotesfortech(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqnotesfortechFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesfortech = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqnotesfortech() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesfortech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqnotesfortech(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqnotesfortechNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqnotesfortech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqpermission(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqpermissionFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqpermission = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqpermission() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqpermission = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqpermission(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqpermissionNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqpermission = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqprogramactions(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqprogramactionsFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqprogramactions = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqprogramactions() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqprogramactions = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqprogramactions(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqprogramactionsNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqprogramactions = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqstate(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqstateFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqstate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqstate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqstate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqstate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqstateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqstate = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqsubdiv(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqsubdivFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqsubdiv = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqsubdiv() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqsubdiv = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqsubdiv(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqsubdivNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqsubdiv = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqtarget(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqtargetFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqtarget = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqtarget() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqtarget = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqtarget(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqtargetNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqtarget = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reqzip(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReqzipFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqzip = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReqzip() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqzip = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReqzip(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReqzipNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reqzip = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Responsedaycount(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ResponsedaycountFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Responsedaycount = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetResponsedaycount() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Responsedaycount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomResponsedaycount(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomResponsedaycountNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Responsedaycount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reviewed(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReviewedFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewed = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReviewed() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReviewed(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReviewedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Reviewedby(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ReviewedbyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewedby = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetReviewedby() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomReviewedby(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomReviewedbyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Revieweddate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) RevieweddateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Revieweddate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetRevieweddate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Revieweddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomRevieweddate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomRevieweddateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Scheduled(val null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ScheduledFunc(f func() null.Val[int16]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduled = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetScheduled() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduled = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomScheduled(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomScheduledNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduled = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Scheduleddate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ScheduleddateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduleddate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetScheduleddate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduleddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomScheduleddate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomScheduleddateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Scheduleddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Source(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Source = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) SourceFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Source = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetSource() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Source = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomSource(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Source = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomSourceNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Source = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) SRNumber(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) SRNumberFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SRNumber = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetSRNumber() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SRNumber = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomSRNumber(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomSRNumberNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SRNumber = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Status(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Status = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) StatusFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Status = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetStatus() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Status = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomStatus(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Status = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomStatusNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Status = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Supervisor(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) SupervisorFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Supervisor = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetSupervisor() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Supervisor = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomSupervisor(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomSupervisorNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Supervisor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Spanish(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) SpanishFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Spanish = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetSpanish() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Spanish = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomSpanish(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomSpanishNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Spanish = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Techclosed(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) TechclosedFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Techclosed = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetTechclosed() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Techclosed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomTechclosed(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomTechclosedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Techclosed = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Validx(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validx = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ValidxFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validx = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetValidx() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validx = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomValidx(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validx = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomValidxNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validx = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Validy(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validy = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ValidyFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validy = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetValidy() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validy = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomValidy(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validy = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomValidyNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Validy = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Xvalue(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) XvalueFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Xvalue = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetXvalue() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Xvalue = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomXvalue(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomXvalueNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Xvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Yvalue(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) YvalueFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Yvalue = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetYvalue() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Yvalue = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomYvalue(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomYvalueNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Yvalue = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Zone(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ZoneFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetZone() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomZone(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomZoneNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Zone2(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) Zone2Func(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone2 = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetZone2() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomZone2(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomZone2NotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Created(val null.Val[time.Time]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Created = func() null.Val[time.Time] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CreatedFunc(f func() null.Val[time.Time]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Created = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetCreated() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Created = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomCreated(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Created = func() null.Val[time.Time] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_time_Time(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCreatedNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Created = func() null.Val[time.Time] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_time_Time(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) CreatedDate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CreatedDateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedDate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetCreatedDate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomCreatedDate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCreatedDateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) CreatedUser(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) CreatedUserFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedUser = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetCreatedUser() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomCreatedUser(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomCreatedUserNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) GeometryX(val null.Val[float64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) GeometryXFunc(f func() null.Val[float64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryX = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetGeometryX() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryX = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomGeometryX(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomGeometryXNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) GeometryY(val null.Val[float64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) GeometryYFunc(f func() null.Val[float64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryY = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetGeometryY() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryY = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomGeometryY(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomGeometryYNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) LastEditedDate(val null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) LastEditedDateFunc(f func() null.Val[int64]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedDate = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetLastEditedDate() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomLastEditedDate(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomLastEditedDateNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) LastEditedUser(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) LastEditedUserFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedUser = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetLastEditedUser() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomLastEditedUser(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomLastEditedUserNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) ScheduleNotes(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) ScheduleNotesFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.ScheduleNotes = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetScheduleNotes() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.ScheduleNotes = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomScheduleNotes(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomScheduleNotesNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.ScheduleNotes = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) SchedulePeriod(val null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) SchedulePeriodFunc(f func() null.Val[string]) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SchedulePeriod = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetSchedulePeriod() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SchedulePeriod = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m historyServicerequestMods) RandomSchedulePeriod(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m historyServicerequestMods) RandomSchedulePeriodNotNull(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.SchedulePeriod = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m historyServicerequestMods) Version(val int32) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Version = func() int32 { return val }
	})
}

// Set the Column from the function
func (m historyServicerequestMods) VersionFunc(f func() int32) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Version = f
	})
}

// Clear any values for the column
func (m historyServicerequestMods) UnsetVersion() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Version = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m historyServicerequestMods) RandomVersion(f *faker.Faker) HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(_ context.Context, o *HistoryServicerequestTemplate) {
		o.Version = func() int32 {
			return random_int32(f)
		}
	})
}

func (m historyServicerequestMods) WithParentsCascading() HistoryServicerequestMod {
	return HistoryServicerequestModFunc(func(ctx context.Context, o *HistoryServicerequestTemplate) {
		if isDone, _ := historyServicerequestWithParentsCascadingCtx.Value(ctx); isDone {
			return
		}
		ctx = historyServicerequestWithParentsCascadingCtx.WithValue(ctx, true)
	})
}

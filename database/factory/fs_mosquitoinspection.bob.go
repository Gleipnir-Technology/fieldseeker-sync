// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import (
	"context"
	"testing"
	"time"

	models "github.com/Gleipnir-Technology/fieldseeker-sync/database/models"
	"github.com/aarondl/opt/null"
	"github.com/aarondl/opt/omit"
	"github.com/aarondl/opt/omitnull"
	"github.com/jaswdr/faker/v2"
	"github.com/stephenafamo/bob"
)

type FSMosquitoinspectionMod interface {
	Apply(context.Context, *FSMosquitoinspectionTemplate)
}

type FSMosquitoinspectionModFunc func(context.Context, *FSMosquitoinspectionTemplate)

func (f FSMosquitoinspectionModFunc) Apply(ctx context.Context, n *FSMosquitoinspectionTemplate) {
	f(ctx, n)
}

type FSMosquitoinspectionModSlice []FSMosquitoinspectionMod

func (mods FSMosquitoinspectionModSlice) Apply(ctx context.Context, n *FSMosquitoinspectionTemplate) {
	for _, f := range mods {
		f.Apply(ctx, n)
	}
}

// FSMosquitoinspectionTemplate is an object representing the database table.
// all columns are optional and should be set by mods
type FSMosquitoinspectionTemplate struct {
	Actiontaken            func() null.Val[string]
	Activity               func() null.Val[string]
	Adultact               func() null.Val[string]
	Avetemp                func() null.Val[float64]
	Avglarvae              func() null.Val[float64]
	Avgpupae               func() null.Val[float64]
	Breeding               func() null.Val[string]
	Cbcount                func() null.Val[int16]
	Comments               func() null.Val[string]
	Containercount         func() null.Val[int16]
	Creationdate           func() null.Val[int64]
	Creator                func() null.Val[string]
	Domstage               func() null.Val[string]
	Eggs                   func() null.Val[int16]
	Enddatetime            func() null.Val[int64]
	Editdate               func() null.Val[int64]
	Editor                 func() null.Val[string]
	Fieldspecies           func() null.Val[string]
	Fieldtech              func() null.Val[string]
	Globalid               func() null.Val[string]
	Jurisdiction           func() null.Val[string]
	Larvaepresent          func() null.Val[int16]
	Linelocid              func() null.Val[string]
	Locationname           func() null.Val[string]
	Lstages                func() null.Val[string]
	Numdips                func() null.Val[int16]
	Objectid               func() int32
	Personalcontact        func() null.Val[int16]
	Pointlocid             func() null.Val[string]
	Polygonlocid           func() null.Val[string]
	Posdips                func() null.Val[int16]
	Positivecontainercount func() null.Val[int16]
	Pupaepresent           func() null.Val[int16]
	Raingauge              func() null.Val[float64]
	Recordstatus           func() null.Val[int16]
	Reviewed               func() null.Val[int16]
	Reviewedby             func() null.Val[string]
	Revieweddate           func() null.Val[int64]
	Sdid                   func() null.Val[string]
	Sitecond               func() null.Val[string]
	Srid                   func() null.Val[string]
	Startdatetime          func() null.Val[int64]
	Tirecount              func() null.Val[int16]
	Totlarvae              func() null.Val[int16]
	Totpupae               func() null.Val[int16]
	Visualmonitoring       func() null.Val[int16]
	Vmcomments             func() null.Val[string]
	Winddir                func() null.Val[string]
	Windspeed              func() null.Val[float64]
	Zone                   func() null.Val[string]
	Zone2                  func() null.Val[string]
	CreatedDate            func() null.Val[int64]
	CreatedUser            func() null.Val[string]
	GeometryX              func() null.Val[float64]
	GeometryY              func() null.Val[float64]
	LastEditedDate         func() null.Val[int64]
	LastEditedUser         func() null.Val[string]
	Adminaction            func() null.Val[string]
	Updated                func() time.Time
	Ptaid                  func() null.Val[string]

	f *Factory

	alreadyPersisted bool
}

// Apply mods to the FSMosquitoinspectionTemplate
func (o *FSMosquitoinspectionTemplate) Apply(ctx context.Context, mods ...FSMosquitoinspectionMod) {
	for _, mod := range mods {
		mod.Apply(ctx, o)
	}
}

// setModelRels creates and sets the relationships on *models.FSMosquitoinspection
// according to the relationships in the template. Nothing is inserted into the db
func (t FSMosquitoinspectionTemplate) setModelRels(o *models.FSMosquitoinspection) {}

// BuildSetter returns an *models.FSMosquitoinspectionSetter
// this does nothing with the relationship templates
func (o FSMosquitoinspectionTemplate) BuildSetter() *models.FSMosquitoinspectionSetter {
	m := &models.FSMosquitoinspectionSetter{}

	if o.Actiontaken != nil {
		val := o.Actiontaken()
		m.Actiontaken = omitnull.FromNull(val)
	}
	if o.Activity != nil {
		val := o.Activity()
		m.Activity = omitnull.FromNull(val)
	}
	if o.Adultact != nil {
		val := o.Adultact()
		m.Adultact = omitnull.FromNull(val)
	}
	if o.Avetemp != nil {
		val := o.Avetemp()
		m.Avetemp = omitnull.FromNull(val)
	}
	if o.Avglarvae != nil {
		val := o.Avglarvae()
		m.Avglarvae = omitnull.FromNull(val)
	}
	if o.Avgpupae != nil {
		val := o.Avgpupae()
		m.Avgpupae = omitnull.FromNull(val)
	}
	if o.Breeding != nil {
		val := o.Breeding()
		m.Breeding = omitnull.FromNull(val)
	}
	if o.Cbcount != nil {
		val := o.Cbcount()
		m.Cbcount = omitnull.FromNull(val)
	}
	if o.Comments != nil {
		val := o.Comments()
		m.Comments = omitnull.FromNull(val)
	}
	if o.Containercount != nil {
		val := o.Containercount()
		m.Containercount = omitnull.FromNull(val)
	}
	if o.Creationdate != nil {
		val := o.Creationdate()
		m.Creationdate = omitnull.FromNull(val)
	}
	if o.Creator != nil {
		val := o.Creator()
		m.Creator = omitnull.FromNull(val)
	}
	if o.Domstage != nil {
		val := o.Domstage()
		m.Domstage = omitnull.FromNull(val)
	}
	if o.Eggs != nil {
		val := o.Eggs()
		m.Eggs = omitnull.FromNull(val)
	}
	if o.Enddatetime != nil {
		val := o.Enddatetime()
		m.Enddatetime = omitnull.FromNull(val)
	}
	if o.Editdate != nil {
		val := o.Editdate()
		m.Editdate = omitnull.FromNull(val)
	}
	if o.Editor != nil {
		val := o.Editor()
		m.Editor = omitnull.FromNull(val)
	}
	if o.Fieldspecies != nil {
		val := o.Fieldspecies()
		m.Fieldspecies = omitnull.FromNull(val)
	}
	if o.Fieldtech != nil {
		val := o.Fieldtech()
		m.Fieldtech = omitnull.FromNull(val)
	}
	if o.Globalid != nil {
		val := o.Globalid()
		m.Globalid = omitnull.FromNull(val)
	}
	if o.Jurisdiction != nil {
		val := o.Jurisdiction()
		m.Jurisdiction = omitnull.FromNull(val)
	}
	if o.Larvaepresent != nil {
		val := o.Larvaepresent()
		m.Larvaepresent = omitnull.FromNull(val)
	}
	if o.Linelocid != nil {
		val := o.Linelocid()
		m.Linelocid = omitnull.FromNull(val)
	}
	if o.Locationname != nil {
		val := o.Locationname()
		m.Locationname = omitnull.FromNull(val)
	}
	if o.Lstages != nil {
		val := o.Lstages()
		m.Lstages = omitnull.FromNull(val)
	}
	if o.Numdips != nil {
		val := o.Numdips()
		m.Numdips = omitnull.FromNull(val)
	}
	if o.Objectid != nil {
		val := o.Objectid()
		m.Objectid = omit.From(val)
	}
	if o.Personalcontact != nil {
		val := o.Personalcontact()
		m.Personalcontact = omitnull.FromNull(val)
	}
	if o.Pointlocid != nil {
		val := o.Pointlocid()
		m.Pointlocid = omitnull.FromNull(val)
	}
	if o.Polygonlocid != nil {
		val := o.Polygonlocid()
		m.Polygonlocid = omitnull.FromNull(val)
	}
	if o.Posdips != nil {
		val := o.Posdips()
		m.Posdips = omitnull.FromNull(val)
	}
	if o.Positivecontainercount != nil {
		val := o.Positivecontainercount()
		m.Positivecontainercount = omitnull.FromNull(val)
	}
	if o.Pupaepresent != nil {
		val := o.Pupaepresent()
		m.Pupaepresent = omitnull.FromNull(val)
	}
	if o.Raingauge != nil {
		val := o.Raingauge()
		m.Raingauge = omitnull.FromNull(val)
	}
	if o.Recordstatus != nil {
		val := o.Recordstatus()
		m.Recordstatus = omitnull.FromNull(val)
	}
	if o.Reviewed != nil {
		val := o.Reviewed()
		m.Reviewed = omitnull.FromNull(val)
	}
	if o.Reviewedby != nil {
		val := o.Reviewedby()
		m.Reviewedby = omitnull.FromNull(val)
	}
	if o.Revieweddate != nil {
		val := o.Revieweddate()
		m.Revieweddate = omitnull.FromNull(val)
	}
	if o.Sdid != nil {
		val := o.Sdid()
		m.Sdid = omitnull.FromNull(val)
	}
	if o.Sitecond != nil {
		val := o.Sitecond()
		m.Sitecond = omitnull.FromNull(val)
	}
	if o.Srid != nil {
		val := o.Srid()
		m.Srid = omitnull.FromNull(val)
	}
	if o.Startdatetime != nil {
		val := o.Startdatetime()
		m.Startdatetime = omitnull.FromNull(val)
	}
	if o.Tirecount != nil {
		val := o.Tirecount()
		m.Tirecount = omitnull.FromNull(val)
	}
	if o.Totlarvae != nil {
		val := o.Totlarvae()
		m.Totlarvae = omitnull.FromNull(val)
	}
	if o.Totpupae != nil {
		val := o.Totpupae()
		m.Totpupae = omitnull.FromNull(val)
	}
	if o.Visualmonitoring != nil {
		val := o.Visualmonitoring()
		m.Visualmonitoring = omitnull.FromNull(val)
	}
	if o.Vmcomments != nil {
		val := o.Vmcomments()
		m.Vmcomments = omitnull.FromNull(val)
	}
	if o.Winddir != nil {
		val := o.Winddir()
		m.Winddir = omitnull.FromNull(val)
	}
	if o.Windspeed != nil {
		val := o.Windspeed()
		m.Windspeed = omitnull.FromNull(val)
	}
	if o.Zone != nil {
		val := o.Zone()
		m.Zone = omitnull.FromNull(val)
	}
	if o.Zone2 != nil {
		val := o.Zone2()
		m.Zone2 = omitnull.FromNull(val)
	}
	if o.CreatedDate != nil {
		val := o.CreatedDate()
		m.CreatedDate = omitnull.FromNull(val)
	}
	if o.CreatedUser != nil {
		val := o.CreatedUser()
		m.CreatedUser = omitnull.FromNull(val)
	}
	if o.GeometryX != nil {
		val := o.GeometryX()
		m.GeometryX = omitnull.FromNull(val)
	}
	if o.GeometryY != nil {
		val := o.GeometryY()
		m.GeometryY = omitnull.FromNull(val)
	}
	if o.LastEditedDate != nil {
		val := o.LastEditedDate()
		m.LastEditedDate = omitnull.FromNull(val)
	}
	if o.LastEditedUser != nil {
		val := o.LastEditedUser()
		m.LastEditedUser = omitnull.FromNull(val)
	}
	if o.Adminaction != nil {
		val := o.Adminaction()
		m.Adminaction = omitnull.FromNull(val)
	}
	if o.Updated != nil {
		val := o.Updated()
		m.Updated = omit.From(val)
	}
	if o.Ptaid != nil {
		val := o.Ptaid()
		m.Ptaid = omitnull.FromNull(val)
	}

	return m
}

// BuildManySetter returns an []*models.FSMosquitoinspectionSetter
// this does nothing with the relationship templates
func (o FSMosquitoinspectionTemplate) BuildManySetter(number int) []*models.FSMosquitoinspectionSetter {
	m := make([]*models.FSMosquitoinspectionSetter, number)

	for i := range m {
		m[i] = o.BuildSetter()
	}

	return m
}

// Build returns an *models.FSMosquitoinspection
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use FSMosquitoinspectionTemplate.Create
func (o FSMosquitoinspectionTemplate) Build() *models.FSMosquitoinspection {
	m := &models.FSMosquitoinspection{}

	if o.Actiontaken != nil {
		m.Actiontaken = o.Actiontaken()
	}
	if o.Activity != nil {
		m.Activity = o.Activity()
	}
	if o.Adultact != nil {
		m.Adultact = o.Adultact()
	}
	if o.Avetemp != nil {
		m.Avetemp = o.Avetemp()
	}
	if o.Avglarvae != nil {
		m.Avglarvae = o.Avglarvae()
	}
	if o.Avgpupae != nil {
		m.Avgpupae = o.Avgpupae()
	}
	if o.Breeding != nil {
		m.Breeding = o.Breeding()
	}
	if o.Cbcount != nil {
		m.Cbcount = o.Cbcount()
	}
	if o.Comments != nil {
		m.Comments = o.Comments()
	}
	if o.Containercount != nil {
		m.Containercount = o.Containercount()
	}
	if o.Creationdate != nil {
		m.Creationdate = o.Creationdate()
	}
	if o.Creator != nil {
		m.Creator = o.Creator()
	}
	if o.Domstage != nil {
		m.Domstage = o.Domstage()
	}
	if o.Eggs != nil {
		m.Eggs = o.Eggs()
	}
	if o.Enddatetime != nil {
		m.Enddatetime = o.Enddatetime()
	}
	if o.Editdate != nil {
		m.Editdate = o.Editdate()
	}
	if o.Editor != nil {
		m.Editor = o.Editor()
	}
	if o.Fieldspecies != nil {
		m.Fieldspecies = o.Fieldspecies()
	}
	if o.Fieldtech != nil {
		m.Fieldtech = o.Fieldtech()
	}
	if o.Globalid != nil {
		m.Globalid = o.Globalid()
	}
	if o.Jurisdiction != nil {
		m.Jurisdiction = o.Jurisdiction()
	}
	if o.Larvaepresent != nil {
		m.Larvaepresent = o.Larvaepresent()
	}
	if o.Linelocid != nil {
		m.Linelocid = o.Linelocid()
	}
	if o.Locationname != nil {
		m.Locationname = o.Locationname()
	}
	if o.Lstages != nil {
		m.Lstages = o.Lstages()
	}
	if o.Numdips != nil {
		m.Numdips = o.Numdips()
	}
	if o.Objectid != nil {
		m.Objectid = o.Objectid()
	}
	if o.Personalcontact != nil {
		m.Personalcontact = o.Personalcontact()
	}
	if o.Pointlocid != nil {
		m.Pointlocid = o.Pointlocid()
	}
	if o.Polygonlocid != nil {
		m.Polygonlocid = o.Polygonlocid()
	}
	if o.Posdips != nil {
		m.Posdips = o.Posdips()
	}
	if o.Positivecontainercount != nil {
		m.Positivecontainercount = o.Positivecontainercount()
	}
	if o.Pupaepresent != nil {
		m.Pupaepresent = o.Pupaepresent()
	}
	if o.Raingauge != nil {
		m.Raingauge = o.Raingauge()
	}
	if o.Recordstatus != nil {
		m.Recordstatus = o.Recordstatus()
	}
	if o.Reviewed != nil {
		m.Reviewed = o.Reviewed()
	}
	if o.Reviewedby != nil {
		m.Reviewedby = o.Reviewedby()
	}
	if o.Revieweddate != nil {
		m.Revieweddate = o.Revieweddate()
	}
	if o.Sdid != nil {
		m.Sdid = o.Sdid()
	}
	if o.Sitecond != nil {
		m.Sitecond = o.Sitecond()
	}
	if o.Srid != nil {
		m.Srid = o.Srid()
	}
	if o.Startdatetime != nil {
		m.Startdatetime = o.Startdatetime()
	}
	if o.Tirecount != nil {
		m.Tirecount = o.Tirecount()
	}
	if o.Totlarvae != nil {
		m.Totlarvae = o.Totlarvae()
	}
	if o.Totpupae != nil {
		m.Totpupae = o.Totpupae()
	}
	if o.Visualmonitoring != nil {
		m.Visualmonitoring = o.Visualmonitoring()
	}
	if o.Vmcomments != nil {
		m.Vmcomments = o.Vmcomments()
	}
	if o.Winddir != nil {
		m.Winddir = o.Winddir()
	}
	if o.Windspeed != nil {
		m.Windspeed = o.Windspeed()
	}
	if o.Zone != nil {
		m.Zone = o.Zone()
	}
	if o.Zone2 != nil {
		m.Zone2 = o.Zone2()
	}
	if o.CreatedDate != nil {
		m.CreatedDate = o.CreatedDate()
	}
	if o.CreatedUser != nil {
		m.CreatedUser = o.CreatedUser()
	}
	if o.GeometryX != nil {
		m.GeometryX = o.GeometryX()
	}
	if o.GeometryY != nil {
		m.GeometryY = o.GeometryY()
	}
	if o.LastEditedDate != nil {
		m.LastEditedDate = o.LastEditedDate()
	}
	if o.LastEditedUser != nil {
		m.LastEditedUser = o.LastEditedUser()
	}
	if o.Adminaction != nil {
		m.Adminaction = o.Adminaction()
	}
	if o.Updated != nil {
		m.Updated = o.Updated()
	}
	if o.Ptaid != nil {
		m.Ptaid = o.Ptaid()
	}

	o.setModelRels(m)

	return m
}

// BuildMany returns an models.FSMosquitoinspectionSlice
// Related objects are also created and placed in the .R field
// NOTE: Objects are not inserted into the database. Use FSMosquitoinspectionTemplate.CreateMany
func (o FSMosquitoinspectionTemplate) BuildMany(number int) models.FSMosquitoinspectionSlice {
	m := make(models.FSMosquitoinspectionSlice, number)

	for i := range m {
		m[i] = o.Build()
	}

	return m
}

func ensureCreatableFSMosquitoinspection(m *models.FSMosquitoinspectionSetter) {
	if !(m.Objectid.IsValue()) {
		val := random_int32(nil)
		m.Objectid = omit.From(val)
	}
}

// insertOptRels creates and inserts any optional the relationships on *models.FSMosquitoinspection
// according to the relationships in the template.
// any required relationship should have already exist on the model
func (o *FSMosquitoinspectionTemplate) insertOptRels(ctx context.Context, exec bob.Executor, m *models.FSMosquitoinspection) error {
	var err error

	return err
}

// Create builds a fsMosquitoinspection and inserts it into the database
// Relations objects are also inserted and placed in the .R field
func (o *FSMosquitoinspectionTemplate) Create(ctx context.Context, exec bob.Executor) (*models.FSMosquitoinspection, error) {
	var err error
	opt := o.BuildSetter()
	ensureCreatableFSMosquitoinspection(opt)

	m, err := models.FSMosquitoinspections.Insert(opt).One(ctx, exec)
	if err != nil {
		return nil, err
	}

	if err := o.insertOptRels(ctx, exec, m); err != nil {
		return nil, err
	}
	return m, err
}

// MustCreate builds a fsMosquitoinspection and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o *FSMosquitoinspectionTemplate) MustCreate(ctx context.Context, exec bob.Executor) *models.FSMosquitoinspection {
	m, err := o.Create(ctx, exec)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateOrFail builds a fsMosquitoinspection and inserts it into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o *FSMosquitoinspectionTemplate) CreateOrFail(ctx context.Context, tb testing.TB, exec bob.Executor) *models.FSMosquitoinspection {
	tb.Helper()
	m, err := o.Create(ctx, exec)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// CreateMany builds multiple fsMosquitoinspections and inserts them into the database
// Relations objects are also inserted and placed in the .R field
func (o FSMosquitoinspectionTemplate) CreateMany(ctx context.Context, exec bob.Executor, number int) (models.FSMosquitoinspectionSlice, error) {
	var err error
	m := make(models.FSMosquitoinspectionSlice, number)

	for i := range m {
		m[i], err = o.Create(ctx, exec)
		if err != nil {
			return nil, err
		}
	}

	return m, nil
}

// MustCreateMany builds multiple fsMosquitoinspections and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// panics if an error occurs
func (o FSMosquitoinspectionTemplate) MustCreateMany(ctx context.Context, exec bob.Executor, number int) models.FSMosquitoinspectionSlice {
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		panic(err)
	}
	return m
}

// CreateManyOrFail builds multiple fsMosquitoinspections and inserts them into the database
// Relations objects are also inserted and placed in the .R field
// It calls `tb.Fatal(err)` on the test/benchmark if an error occurs
func (o FSMosquitoinspectionTemplate) CreateManyOrFail(ctx context.Context, tb testing.TB, exec bob.Executor, number int) models.FSMosquitoinspectionSlice {
	tb.Helper()
	m, err := o.CreateMany(ctx, exec, number)
	if err != nil {
		tb.Fatal(err)
		return nil
	}
	return m
}

// FSMosquitoinspection has methods that act as mods for the FSMosquitoinspectionTemplate
var FSMosquitoinspectionMods fsMosquitoinspectionMods

type fsMosquitoinspectionMods struct{}

func (m fsMosquitoinspectionMods) RandomizeAllColumns(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModSlice{
		FSMosquitoinspectionMods.RandomActiontaken(f),
		FSMosquitoinspectionMods.RandomActivity(f),
		FSMosquitoinspectionMods.RandomAdultact(f),
		FSMosquitoinspectionMods.RandomAvetemp(f),
		FSMosquitoinspectionMods.RandomAvglarvae(f),
		FSMosquitoinspectionMods.RandomAvgpupae(f),
		FSMosquitoinspectionMods.RandomBreeding(f),
		FSMosquitoinspectionMods.RandomCbcount(f),
		FSMosquitoinspectionMods.RandomComments(f),
		FSMosquitoinspectionMods.RandomContainercount(f),
		FSMosquitoinspectionMods.RandomCreationdate(f),
		FSMosquitoinspectionMods.RandomCreator(f),
		FSMosquitoinspectionMods.RandomDomstage(f),
		FSMosquitoinspectionMods.RandomEggs(f),
		FSMosquitoinspectionMods.RandomEnddatetime(f),
		FSMosquitoinspectionMods.RandomEditdate(f),
		FSMosquitoinspectionMods.RandomEditor(f),
		FSMosquitoinspectionMods.RandomFieldspecies(f),
		FSMosquitoinspectionMods.RandomFieldtech(f),
		FSMosquitoinspectionMods.RandomGlobalid(f),
		FSMosquitoinspectionMods.RandomJurisdiction(f),
		FSMosquitoinspectionMods.RandomLarvaepresent(f),
		FSMosquitoinspectionMods.RandomLinelocid(f),
		FSMosquitoinspectionMods.RandomLocationname(f),
		FSMosquitoinspectionMods.RandomLstages(f),
		FSMosquitoinspectionMods.RandomNumdips(f),
		FSMosquitoinspectionMods.RandomObjectid(f),
		FSMosquitoinspectionMods.RandomPersonalcontact(f),
		FSMosquitoinspectionMods.RandomPointlocid(f),
		FSMosquitoinspectionMods.RandomPolygonlocid(f),
		FSMosquitoinspectionMods.RandomPosdips(f),
		FSMosquitoinspectionMods.RandomPositivecontainercount(f),
		FSMosquitoinspectionMods.RandomPupaepresent(f),
		FSMosquitoinspectionMods.RandomRaingauge(f),
		FSMosquitoinspectionMods.RandomRecordstatus(f),
		FSMosquitoinspectionMods.RandomReviewed(f),
		FSMosquitoinspectionMods.RandomReviewedby(f),
		FSMosquitoinspectionMods.RandomRevieweddate(f),
		FSMosquitoinspectionMods.RandomSdid(f),
		FSMosquitoinspectionMods.RandomSitecond(f),
		FSMosquitoinspectionMods.RandomSrid(f),
		FSMosquitoinspectionMods.RandomStartdatetime(f),
		FSMosquitoinspectionMods.RandomTirecount(f),
		FSMosquitoinspectionMods.RandomTotlarvae(f),
		FSMosquitoinspectionMods.RandomTotpupae(f),
		FSMosquitoinspectionMods.RandomVisualmonitoring(f),
		FSMosquitoinspectionMods.RandomVmcomments(f),
		FSMosquitoinspectionMods.RandomWinddir(f),
		FSMosquitoinspectionMods.RandomWindspeed(f),
		FSMosquitoinspectionMods.RandomZone(f),
		FSMosquitoinspectionMods.RandomZone2(f),
		FSMosquitoinspectionMods.RandomCreatedDate(f),
		FSMosquitoinspectionMods.RandomCreatedUser(f),
		FSMosquitoinspectionMods.RandomGeometryX(f),
		FSMosquitoinspectionMods.RandomGeometryY(f),
		FSMosquitoinspectionMods.RandomLastEditedDate(f),
		FSMosquitoinspectionMods.RandomLastEditedUser(f),
		FSMosquitoinspectionMods.RandomAdminaction(f),
		FSMosquitoinspectionMods.RandomUpdated(f),
		FSMosquitoinspectionMods.RandomPtaid(f),
	}
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Actiontaken(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Actiontaken = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ActiontakenFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Actiontaken = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetActiontaken() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Actiontaken = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomActiontaken(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Actiontaken = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomActiontakenNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Actiontaken = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Activity(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Activity = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ActivityFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Activity = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetActivity() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Activity = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomActivity(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Activity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomActivityNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Activity = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Adultact(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adultact = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) AdultactFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adultact = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetAdultact() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adultact = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomAdultact(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adultact = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomAdultactNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adultact = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Avetemp(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avetemp = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) AvetempFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avetemp = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetAvetemp() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avetemp = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomAvetemp(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avetemp = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomAvetempNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avetemp = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Avglarvae(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avglarvae = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) AvglarvaeFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avglarvae = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetAvglarvae() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avglarvae = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomAvglarvae(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avglarvae = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomAvglarvaeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avglarvae = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Avgpupae(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avgpupae = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) AvgpupaeFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avgpupae = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetAvgpupae() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avgpupae = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomAvgpupae(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avgpupae = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomAvgpupaeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Avgpupae = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Breeding(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Breeding = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) BreedingFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Breeding = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetBreeding() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Breeding = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomBreeding(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Breeding = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomBreedingNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Breeding = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Cbcount(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Cbcount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CbcountFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Cbcount = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetCbcount() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Cbcount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomCbcount(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Cbcount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCbcountNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Cbcount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Comments(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Comments = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CommentsFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Comments = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetComments() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Comments = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomComments(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCommentsNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Comments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Containercount(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Containercount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ContainercountFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Containercount = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetContainercount() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Containercount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomContainercount(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Containercount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomContainercountNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Containercount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Creationdate(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creationdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CreationdateFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creationdate = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetCreationdate() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creationdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomCreationdate(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCreationdateNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creationdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Creator(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creator = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CreatorFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creator = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetCreator() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creator = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomCreator(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCreatorNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Creator = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Domstage(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Domstage = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) DomstageFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Domstage = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetDomstage() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Domstage = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomDomstage(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Domstage = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomDomstageNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Domstage = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Eggs(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Eggs = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) EggsFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Eggs = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetEggs() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Eggs = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomEggs(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Eggs = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomEggsNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Eggs = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Enddatetime(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Enddatetime = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) EnddatetimeFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Enddatetime = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetEnddatetime() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Enddatetime = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomEnddatetime(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Enddatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomEnddatetimeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Enddatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Editdate(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editdate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) EditdateFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editdate = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetEditdate() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editdate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomEditdate(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomEditdateNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editdate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Editor(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editor = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) EditorFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editor = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetEditor() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editor = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomEditor(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomEditorNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Editor = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Fieldspecies(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldspecies = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) FieldspeciesFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldspecies = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetFieldspecies() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldspecies = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomFieldspecies(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldspecies = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomFieldspeciesNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldspecies = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Fieldtech(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldtech = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) FieldtechFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldtech = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetFieldtech() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldtech = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomFieldtech(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomFieldtechNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Fieldtech = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Globalid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Globalid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) GlobalidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Globalid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetGlobalid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Globalid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomGlobalid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomGlobalidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Globalid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Jurisdiction(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Jurisdiction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) JurisdictionFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Jurisdiction = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetJurisdiction() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Jurisdiction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomJurisdiction(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomJurisdictionNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Jurisdiction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Larvaepresent(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Larvaepresent = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LarvaepresentFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Larvaepresent = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLarvaepresent() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Larvaepresent = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLarvaepresent(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Larvaepresent = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLarvaepresentNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Larvaepresent = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Linelocid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Linelocid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LinelocidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Linelocid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLinelocid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Linelocid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLinelocid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Linelocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLinelocidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Linelocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Locationname(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Locationname = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LocationnameFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Locationname = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLocationname() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Locationname = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLocationname(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Locationname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLocationnameNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Locationname = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Lstages(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Lstages = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LstagesFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Lstages = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLstages() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Lstages = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLstages(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Lstages = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLstagesNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Lstages = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Numdips(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Numdips = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) NumdipsFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Numdips = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetNumdips() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Numdips = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomNumdips(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Numdips = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomNumdipsNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Numdips = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Objectid(val int32) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Objectid = func() int32 { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ObjectidFunc(f func() int32) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Objectid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetObjectid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Objectid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m fsMosquitoinspectionMods) RandomObjectid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Objectid = func() int32 {
			return random_int32(f)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Personalcontact(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Personalcontact = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PersonalcontactFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Personalcontact = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPersonalcontact() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Personalcontact = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPersonalcontact(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Personalcontact = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPersonalcontactNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Personalcontact = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Pointlocid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pointlocid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PointlocidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pointlocid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPointlocid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pointlocid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPointlocid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPointlocidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pointlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Polygonlocid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Polygonlocid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PolygonlocidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Polygonlocid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPolygonlocid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Polygonlocid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPolygonlocid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Polygonlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPolygonlocidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Polygonlocid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Posdips(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Posdips = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PosdipsFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Posdips = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPosdips() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Posdips = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPosdips(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Posdips = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPosdipsNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Posdips = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Positivecontainercount(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Positivecontainercount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PositivecontainercountFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Positivecontainercount = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPositivecontainercount() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Positivecontainercount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPositivecontainercount(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Positivecontainercount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPositivecontainercountNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Positivecontainercount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Pupaepresent(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pupaepresent = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PupaepresentFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pupaepresent = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPupaepresent() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pupaepresent = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPupaepresent(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pupaepresent = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPupaepresentNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Pupaepresent = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Raingauge(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Raingauge = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) RaingaugeFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Raingauge = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetRaingauge() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Raingauge = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomRaingauge(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Raingauge = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomRaingaugeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Raingauge = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Recordstatus(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Recordstatus = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) RecordstatusFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Recordstatus = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetRecordstatus() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Recordstatus = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomRecordstatus(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomRecordstatusNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Recordstatus = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Reviewed(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewed = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ReviewedFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewed = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetReviewed() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomReviewed(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomReviewedNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewed = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Reviewedby(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewedby = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ReviewedbyFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewedby = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetReviewedby() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewedby = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomReviewedby(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomReviewedbyNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Reviewedby = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Revieweddate(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Revieweddate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) RevieweddateFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Revieweddate = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetRevieweddate() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Revieweddate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomRevieweddate(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomRevieweddateNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Revieweddate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Sdid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sdid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) SdidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sdid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetSdid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sdid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomSdid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sdid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomSdidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sdid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Sitecond(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sitecond = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) SitecondFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sitecond = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetSitecond() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sitecond = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomSitecond(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sitecond = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomSitecondNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Sitecond = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Srid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Srid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) SridFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Srid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetSrid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Srid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomSrid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Srid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomSridNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Srid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Startdatetime(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Startdatetime = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) StartdatetimeFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Startdatetime = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetStartdatetime() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Startdatetime = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomStartdatetime(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Startdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomStartdatetimeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Startdatetime = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Tirecount(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Tirecount = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) TirecountFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Tirecount = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetTirecount() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Tirecount = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomTirecount(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Tirecount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomTirecountNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Tirecount = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Totlarvae(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totlarvae = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) TotlarvaeFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totlarvae = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetTotlarvae() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totlarvae = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomTotlarvae(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totlarvae = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomTotlarvaeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totlarvae = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Totpupae(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totpupae = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) TotpupaeFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totpupae = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetTotpupae() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totpupae = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomTotpupae(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totpupae = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomTotpupaeNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Totpupae = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Visualmonitoring(val null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Visualmonitoring = func() null.Val[int16] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) VisualmonitoringFunc(f func() null.Val[int16]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Visualmonitoring = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetVisualmonitoring() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Visualmonitoring = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomVisualmonitoring(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Visualmonitoring = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomVisualmonitoringNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Visualmonitoring = func() null.Val[int16] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int16(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Vmcomments(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Vmcomments = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) VmcommentsFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Vmcomments = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetVmcomments() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Vmcomments = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomVmcomments(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Vmcomments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomVmcommentsNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Vmcomments = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Winddir(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Winddir = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) WinddirFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Winddir = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetWinddir() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Winddir = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomWinddir(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Winddir = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomWinddirNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Winddir = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Windspeed(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Windspeed = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) WindspeedFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Windspeed = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetWindspeed() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Windspeed = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomWindspeed(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Windspeed = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomWindspeedNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Windspeed = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Zone(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) ZoneFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetZone() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomZone(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomZoneNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Zone2(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone2 = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) Zone2Func(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone2 = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetZone2() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone2 = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomZone2(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomZone2NotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Zone2 = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) CreatedDate(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CreatedDateFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedDate = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetCreatedDate() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomCreatedDate(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCreatedDateNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) CreatedUser(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) CreatedUserFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedUser = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetCreatedUser() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomCreatedUser(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomCreatedUserNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.CreatedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) GeometryX(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryX = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) GeometryXFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryX = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetGeometryX() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryX = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomGeometryX(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomGeometryXNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryX = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) GeometryY(val null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryY = func() null.Val[float64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) GeometryYFunc(f func() null.Val[float64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryY = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetGeometryY() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryY = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomGeometryY(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomGeometryYNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.GeometryY = func() null.Val[float64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_float64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) LastEditedDate(val null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedDate = func() null.Val[int64] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LastEditedDateFunc(f func() null.Val[int64]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedDate = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLastEditedDate() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedDate = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLastEditedDate(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLastEditedDateNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedDate = func() null.Val[int64] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_int64(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) LastEditedUser(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedUser = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) LastEditedUserFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedUser = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetLastEditedUser() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedUser = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomLastEditedUser(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomLastEditedUserNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.LastEditedUser = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Adminaction(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adminaction = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) AdminactionFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adminaction = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetAdminaction() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adminaction = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomAdminaction(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adminaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomAdminactionNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Adminaction = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Updated(val time.Time) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Updated = func() time.Time { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) UpdatedFunc(f func() time.Time) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Updated = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetUpdated() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Updated = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
func (m fsMosquitoinspectionMods) RandomUpdated(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Updated = func() time.Time {
			return random_time_Time(f)
		}
	})
}

// Set the model columns to this value
func (m fsMosquitoinspectionMods) Ptaid(val null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Ptaid = func() null.Val[string] { return val }
	})
}

// Set the Column from the function
func (m fsMosquitoinspectionMods) PtaidFunc(f func() null.Val[string]) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Ptaid = f
	})
}

// Clear any values for the column
func (m fsMosquitoinspectionMods) UnsetPtaid() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Ptaid = nil
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is sometimes null
func (m fsMosquitoinspectionMods) RandomPtaid(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Ptaid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

// Generates a random value for the column using the given faker
// if faker is nil, a default faker is used
// The generated value is never null
func (m fsMosquitoinspectionMods) RandomPtaidNotNull(f *faker.Faker) FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(_ context.Context, o *FSMosquitoinspectionTemplate) {
		o.Ptaid = func() null.Val[string] {
			if f == nil {
				f = &defaultFaker
			}

			val := random_string(f)
			return null.From(val)
		}
	})
}

func (m fsMosquitoinspectionMods) WithParentsCascading() FSMosquitoinspectionMod {
	return FSMosquitoinspectionModFunc(func(ctx context.Context, o *FSMosquitoinspectionTemplate) {
		if isDone, _ := fsMosquitoinspectionWithParentsCascadingCtx.Value(ctx); isDone {
			return
		}
		ctx = fsMosquitoinspectionWithParentsCascadingCtx.WithValue(ctx, true)
	})
}
